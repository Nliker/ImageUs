{"version":3,"file":"257.js","mappings":"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","sources":["webpack://imageus/./components/UserFormBox/styles.tsx","webpack://imageus/./components/UserFormBox/index.tsx","webpack://imageus/./pages/LogIn/styled.tsx","webpack://imageus/./pages/LogIn/index.tsx","webpack://imageus/./styles/Button/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  @media screen and (min-width: 601px) {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    min-height: 100vh;\r\n\r\n    &:before,\r\n    &:after {\r\n      display: block;\r\n      flex-grow: 1;\r\n\r\n      height: 18px;\r\n      box-sizing: border-box;\r\n\r\n      content: '';\r\n    }\r\n  }\r\n`;\r\n\r\nexport const OuterContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  text-align: center;\r\n\r\n  padding: 24px 24px 36px;\r\n\r\n  @media screen and (min-width: 450px) {\r\n    padding: 48px 40px 36px;\r\n  }\r\n\r\n  @media screen and (min-width: 601px) {\r\n    display: block;\r\n\r\n    width: 450px;\r\n    margin: 0 auto;\r\n\r\n    border: 1px solid #dadce0;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nexport const InnerContainer = styled.div`\r\n  padding-top: 30px;\r\n`;\r\n","import React from 'react';\r\nimport { InnerContainer, OuterContainer, Wrapper } from './styles';\r\n\r\ninterface InputBoxProps {\r\n  children?: React.ReactNode;\r\n  pageName?: string;\r\n}\r\n\r\nconst UserFormBox = ({ children, pageName }: InputBoxProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <OuterContainer>\r\n        <h1>{pageName}</h1>\r\n        <InnerContainer>{children}</InnerContainer>\r\n      </OuterContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default UserFormBox;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const InputBox = styled.div`\r\n  input {\r\n    width: 100%;\r\n    height: 56px;\r\n    margin: 1px 1px 0 1px;\r\n    padding: 13px 15px;\r\n    box-sizing: border-box;\r\n\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 3px #eee;\r\n\r\n    color: #202124;\r\n    font-size: 17px;\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    text-align: left;\r\n\r\n    &:not(.pwcheck-label) {\r\n      padding-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  height: 2rem;\r\n\r\n  color: orangered;\r\n`;\r\n\r\nexport const CheckBox = styled.div`\r\n  display: block;\r\n\r\n  margin-top: 20px;\r\n\r\n  input {\r\n    transform: scale(1.5);\r\n  }\r\n`;\r\n\r\nexport const SubmitBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  margin-top: 40px;\r\n\r\n  .signup_link {\r\n    font-weight: 400;\r\n    line-height: 1.38;\r\n    letter-spacing: -0.3px;\r\n    border-bottom: 1px solid #858a8d;\r\n    color: #616568;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const SocialLoginBox = styled.div`\r\n  margin-top: 13px;\r\n\r\n  .social_icon_box {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    padding: 12px 0;\r\n    gap: 5rem;\r\n\r\n    .social_icon_a {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      width: 40px;\r\n      height: 40px;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .kakao_icon {\r\n      color: black;\r\n      background-color: #fae500;\r\n    }\r\n\r\n    .naver_icon {\r\n      color: white;\r\n      background-color: #15c654;\r\n    }\r\n  }\r\n\r\n  .social_sign-in_title {\r\n    position: relative;\r\n    z-index: 11;\r\n\r\n    padding: 0 8px;\r\n    margin-bottom: 16px;\r\n\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    letter-spacing: -0.3px;\r\n    color: #b8b8b8;\r\n    background-color: #fff;\r\n  }\r\n\r\n  .social_sign-in_line {\r\n    position: relative;\r\n    bottom: -12px;\r\n    display: block;\r\n\r\n    width: 100%;\r\n    height: 1px;\r\n    margin: 0;\r\n\r\n    background-color: #b8b8b8;\r\n    border: none;\r\n  }\r\n`;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { mutate } from 'swr';\r\nimport useSWRMutation from 'swr/mutation';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { RiKakaoTalkFill } from 'react-icons/ri';\r\nimport { SiNaver } from 'react-icons/si';\r\n\r\nimport UserFormBox from '@components/UserFormBox';\r\nimport { logInRequestFetcher } from '@utils/logInFetcher';\r\nimport { Button } from '@styles/Button';\r\nimport { ErrorMessage, InputBox, SocialLoginBox, SubmitBox } from './styled';\r\n\r\nconst LogIn = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { data: logInSuccess, trigger } = useSWRMutation(\r\n    '/user/login',\r\n    logInRequestFetcher,\r\n  );\r\n\r\n  const [emailValue, setEmailValue] = useState<string>('');\r\n  const [passwordValue, setPwValue] = useState<string>('');\r\n  const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\r\n  const [pwErrorMessage, setPwErrorMessage] = useState<string>('');\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const emailRegex = new RegExp(\r\n    \"([!#-'*+/-9=?A-Z^-~-]+(.[!#-'*+/-9=?A-Z^-~-]+)*|\\\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\\\")@([!#-'*+/-9=?A-Z^-~-]+(.[!#-'*+/-9=?A-Z^-~-]+)*|[[\\t -Z^-~]*])\",\r\n  );\r\n\r\n  const emailValidation = useCallback((value: string) => {\r\n    if (!value) {\r\n      setEmailErrorMessage('이메일을 입력해주세요.');\r\n      return false;\r\n    } else if (!emailRegex.test(value)) {\r\n      setEmailErrorMessage('이메일 형식에 맞지 않습니다.');\r\n      return false;\r\n    }\r\n    setEmailErrorMessage('');\r\n    return true;\r\n  }, []);\r\n\r\n  const pwValidation = useCallback((value: string) => {\r\n    if (!value) {\r\n      setPwErrorMessage('비밀번호를 입력해주세요.');\r\n      return false;\r\n    } else if (value?.length < 8) {\r\n      setPwErrorMessage('비밀번호는 8글자 이상입니다.');\r\n      return false;\r\n    }\r\n    setPwErrorMessage('');\r\n    return true;\r\n  }, []);\r\n\r\n  const onChangeEmailInput = (e: { target: { value: string } }) => {\r\n    setEmailValue(e.target.value);\r\n    const inputValue = e.target.value;\r\n    emailValidation(inputValue);\r\n  };\r\n\r\n  const onChangePasswordInput = (e: { target: { value: string } }) => {\r\n    setPwValue(e.target.value);\r\n    const inputValue = e.target.value;\r\n    pwValidation(inputValue);\r\n  };\r\n\r\n  const onSubmitLoginInfo = async (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    const emailCheck = emailValidation(emailValue);\r\n    const pwCheck = pwValidation(passwordValue);\r\n    if (!emailCheck && !pwCheck) {\r\n      alert('이메일과 비밀번호를 다시 확인해주세요.');\r\n    } else if (!emailCheck) {\r\n      alert('이메일을 다시 확인해주세요.');\r\n    } else if (!pwCheck) {\r\n      alert('비밀번호를 다시 확인해주세요.');\r\n    } else {\r\n      await trigger({ email: emailValue, password: passwordValue });\r\n      await mutate('/user/my');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (logInSuccess) navigate('/main_page');\r\n  }, [logInSuccess]);\r\n\r\n  return (\r\n    <UserFormBox pageName={'로그인'}>\r\n      <form onSubmit={onSubmitLoginInfo}>\r\n        <div>\r\n          <InputBox>\r\n            <label htmlFor=\"email-input\">이메일 주소를 입력하세요.</label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email-input\"\r\n                ref={emailRef}\r\n                value={emailValue}\r\n                onChange={onChangeEmailInput}\r\n                placeholder=\"이메일을 입력하세요.\"\r\n              />\r\n            </div>\r\n            <ErrorMessage>\r\n              <span>{emailErrorMessage}</span>\r\n            </ErrorMessage>\r\n          </InputBox>\r\n        </div>\r\n        <div>\r\n          <InputBox>\r\n            <label htmlFor=\"password-input\">비밀번호를 입력하세요.</label>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password-input\"\r\n                ref={passwordRef}\r\n                value={passwordValue}\r\n                onChange={onChangePasswordInput}\r\n                placeholder=\"비밀번호를 입력하세요.\"\r\n              />\r\n            </div>\r\n            <ErrorMessage>\r\n              <span>{pwErrorMessage}</span>\r\n            </ErrorMessage>\r\n          </InputBox>\r\n        </div>\r\n        <SubmitBox>\r\n          <NavLink to={'/signup'} className=\"signup_link\">\r\n            계정 만들기\r\n          </NavLink>\r\n          <Button type=\"submit\">확인</Button>\r\n        </SubmitBox>\r\n      </form>\r\n      <SocialLoginBox>\r\n        <hr className=\"social_sign-in_line\" />\r\n        <span className=\"social_sign-in_title\">간편 로그인</span>\r\n        <div className=\"social_icon_box\">\r\n          <a\r\n            href={`/backapi/oauth-login?coperation=kakao`}\r\n            className=\"kakao_icon social_icon_a\"\r\n          >\r\n            <IconContext.Provider\r\n              value={{\r\n                size: '60%',\r\n                style: { display: 'inline-block' },\r\n              }}\r\n            >\r\n              <RiKakaoTalkFill />\r\n            </IconContext.Provider>\r\n          </a>\r\n          <a\r\n            href=\"/backapi/oauth-login?coperation=naver\"\r\n            className=\"naver_icon social_icon_a\"\r\n          >\r\n            <IconContext.Provider\r\n              value={{\r\n                size: '60%',\r\n                style: { display: 'inline-block' },\r\n              }}\r\n            >\r\n              <SiNaver />\r\n            </IconContext.Provider>\r\n          </a>\r\n        </div>\r\n      </SocialLoginBox>\r\n    </UserFormBox>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import styled from '@emotion/styled';\r\n\r\nconst buttonColor = {\r\n  warning: '#212529',\r\n  default: '#ffffff',\r\n};\r\nconst buttonBgColor = {\r\n  success: '#28a745',\r\n  error: '#dc3545',\r\n  warning: '#ffc107',\r\n  default: '#0d6efd',\r\n};\r\nconst buttonHoverBgColor = {\r\n  success: '#218838',\r\n  error: '#c82333',\r\n  warning: '#e0a800',\r\n  default: '#025ce2',\r\n};\r\n\r\nconst Button = styled.button`\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  appearance: none;\r\n\r\n  background: ${buttonBgColor.default};\r\n  color: ${buttonColor.default};\r\n\r\n  margin: 0;\r\n  padding: 0.5rem 1rem;\r\n\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  text-decoration: none;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n\r\n  display: inline-block;\r\n  width: auto;\r\n\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n    0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 0.5s;\r\n\r\n  &.success {\r\n    background: ${buttonBgColor.success};\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      background: ${buttonHoverBgColor.success};\r\n      outline: 0;\r\n    }\r\n    &:disabled {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n\r\n  &.error {\r\n    background: ${buttonBgColor.error};\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      background: ${buttonHoverBgColor.error};\r\n      outline: 0;\r\n    }\r\n    &:disabled {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n\r\n  &.warning {\r\n    color: ${buttonColor.warning};\r\n    background: ${buttonBgColor.warning};\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      background: ${buttonHoverBgColor.warning};\r\n      outline: 0;\r\n    }\r\n    &:disabled {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { Button };\r\n"],"names":["Wrapper","styled","OuterContainer","InnerContainer","children","pageName","InputBox","ErrorMessage","SubmitBox","SocialLoginBox","i","navigate","useNavigate","useSWRMutation","logInRequestFetcher","logInSuccess","data","trigger","useState","emailValue","setEmailValue","passwordValue","setPwValue","emailErrorMessage","setEmailErrorMessage","pwErrorMessage","setPwErrorMessage","emailRef","useRef","passwordRef","emailRegex","RegExp","emailValidation","useCallback","value","test","pwValidation","length","onSubmitLoginInfo","e","preventDefault","emailCheck","pwCheck","alert","email","password","mutate","useEffect","UserFormBox","onSubmit","htmlFor","type","id","ref","onChange","target","inputValue","placeholder","to","className","Button","href","size","style","display"],"sourceRoot":""}