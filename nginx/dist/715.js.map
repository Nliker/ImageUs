{"version":3,"file":"715.js","mappings":"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","sources":["webpack://imageus/./hooks/useInput.ts","webpack://imageus/./components/NavigationBar/styles.tsx","webpack://imageus/./components/NavigationBar/index.tsx","webpack://imageus/./components/SideBar/CollapseListBox/styles.tsx","webpack://imageus/./components/SideBar/CollapseListBox/index.tsx","webpack://imageus/./components/SideBar/ChannelList/styles.tsx","webpack://imageus/./components/SideBar/ChannelList/index.tsx","webpack://imageus/./components/SideBar/MemberList/styles.tsx","webpack://imageus/./components/SideBar/MemberList/index.tsx","webpack://imageus/./components/SideBar/styles.tsx","webpack://imageus/./components/SideBar/index.tsx","webpack://imageus/./components/Modal/AlertBoxModal/styles.tsx","webpack://imageus/./components/Modal/AlertBoxModal/index.tsx","webpack://imageus/./components/Modal/CreateRoomModal/styles.tsx","webpack://imageus/./components/Modal/CreateRoomModal/index.tsx","webpack://imageus/./components/Modal/DetailPictureModal/styles.tsx","webpack://imageus/./components/Modal/DetailPictureModal/index.tsx","webpack://imageus/./components/Modal/InviteMemberModal/styles.tsx","webpack://imageus/./components/Modal/InviteMemberModal/index.tsx","webpack://imageus/./components/Modal/UploadModal/styles.tsx","webpack://imageus/./components/Modal/UploadModal/index.tsx","webpack://imageus/./components/Modal/ModalLayout/styles.tsx","webpack://imageus/./components/Modal/ModalLayout/index.tsx","webpack://imageus/./components/Modal/index.tsx","webpack://imageus/./layouts/AppLayout/styles.tsx","webpack://imageus/./layouts/AppLayout/index.tsx","webpack://imageus/./styles/ActiveButton/styles.tsx","webpack://imageus/./styles/ActiveButton/index.tsx","webpack://imageus/./styles/Button/index.tsx","webpack://imageus/./utils/imageFetcher.ts","webpack://imageus/./utils/roomDataFetcher.ts","webpack://imageus/./utils/userDataFetcher.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from \"react\"\r\n\r\nconst useInput = (initialValue: string): [string, Dispatch<SetStateAction<string>>, (e: React.ChangeEvent<HTMLInputElement>) => void] => {\r\n    const [value, setValue] = useState(initialValue);\r\n    const onChangeForm = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value);\r\n    }, []);\r\n    return [value, setValue, onChangeForm];\r\n};\r\n\r\nexport default useInput;","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.nav`\r\n  display: block;\r\n  position: fixed;\r\n  bottom: 0;\r\n  z-index: 100;\r\n\r\n  width: 100%;\r\n  min-width: 330px;\r\n  font-size: 0.75rem;\r\n\r\n  h1 {\r\n    margin: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    position: static;\r\n  }\r\n`;\r\n\r\nexport const BottomContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n\r\n  width: 100%;\r\n  height: 66px;\r\n  box-shadow: 0 -2px 4px 0 rgb(33 37 41 / 8%);\r\n\r\n  background-color: #fff;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #47443e;\r\n  }\r\n\r\n  .user_icon {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    flex: 0.8;\r\n    border-left: solid 1px #e4efef;\r\n\r\n    .user_icon_d {\r\n      position: relative;\r\n      display: inline-block;\r\n\r\n      width: 24px;\r\n      height: 24px;\r\n\r\n      .user_icon_s {\r\n        display: inline-block;\r\n        height: 100%;\r\n\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    box-shadow: 0 2px 4px 0 rgb(33 37 41 / 8%);\r\n  }\r\n`;\r\n\r\nexport const MobileNavList = styled.ul`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex: 10;\r\n\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  .navigate_link:hover,\r\n  .nav_item:hover {\r\n    color: #0d6efd;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    justify-content: start;\r\n\r\n    gap: 4rem;\r\n    padding-left: 4rem;\r\n  }\r\n`;\r\n\r\nexport const MobileNavItem = styled.li`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  height: 100%;\r\n  padding: 0.5rem 1rem;\r\n\r\n  list-style: none;\r\n  box-sizing: border-box;\r\n\r\n  svg {\r\n    display: block;\r\n\r\n    width: 25px;\r\n    height: auto;\r\n    margin: 0 auto 3px;\r\n  }\r\n\r\n  h1 {\r\n    a {\r\n      display: flex;\r\n      gap: 0.5rem;\r\n\r\n      svg {\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n  }\r\n\r\n  .upload_btn {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const UserBox = styled.div`\r\n  position: absolute;\r\n  top: -153px;\r\n  flex-direction: column;\r\n  z-index: 1000;\r\n\r\n  height: auto;\r\n  right: -10px;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 0.125rem 0.5rem rgb(0 0 0 / 30%),\r\n    0 0.0625rem 0.125rem rgb(0 0 0 / 20%);\r\n\r\n  background-color: white;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 100%;\r\n      right: 0.9em;\r\n\r\n      width: 0;\r\n      height: 0;\r\n      border: 0.75rem solid transparent;\r\n      border-bottom: none;\r\n\r\n      border-top-color: #fff;\r\n      filter: drop-shadow(0 0.2rem 0.0625rem rgba(0, 0, 0, 0.1));\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    top: 42px;\r\n    right: -17px;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: 1.5em;\r\n      bottom: 100%;\r\n\r\n      width: 0;\r\n      height: 0;\r\n      border: 0.75rem solid transparent;\r\n      border-top: none;\r\n\r\n      border-bottom-color: #fff;\r\n      filter: drop-shadow(0 -0.0625rem 0.0625rem rgba(0, 0, 0, 0.1));\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  p {\r\n    margin: 0;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .info_words {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n\r\n    gap: 0.5rem;\r\n    margin-left: 10px;\r\n\r\n    user-select: text;\r\n  }\r\n`;\r\n\r\nexport const LogoutBtn = styled.div`\r\n  text-align: center;\r\n\r\n  margin-top: 20px;\r\n\r\n  button {\r\n    font-size: 80%;\r\n  }\r\n`;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport useSWR from 'swr';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { BiUserCircle } from 'react-icons/bi';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { CgUserList } from 'react-icons/cg';\r\nimport { HiOutlineHome } from 'react-icons/hi';\r\nimport { MdOutlineManageAccounts } from 'react-icons/md';\r\n\r\nimport { Button } from '@styles/Button';\r\nimport {\r\n  BottomContainer,\r\n  LogoutBtn,\r\n  MobileNavItem,\r\n  MobileNavList,\r\n  UserBox,\r\n  UserInfo,\r\n  Wrapper,\r\n} from './styles';\r\n\r\nconst NavigationBar = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { data: userInfo, mutate: upadateUserState } = useSWR('/user/my');\r\n\r\n  const [clickUserIcon, setClickUserIcon] = useState<boolean>(false);\r\n  const [hoverUserIcon, setHoverUserIcon] = useState<boolean>(false);\r\n  const userInfoEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('click', userIconBoxHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('click', userIconBoxHandler);\r\n    };\r\n  }, []);\r\n\r\n  const MobileNav = ({ children }: any) => {\r\n    const isMobile = useMediaQuery({ maxWidth: 1023 });\r\n    return isMobile ? children : null;\r\n  };\r\n\r\n  const DeskTopNav = ({ children }: any) => {\r\n    const isDesktop = useMediaQuery({ minWidth: 1024 });\r\n    return isDesktop ? children : null;\r\n  };\r\n\r\n  const userIconBoxHandler = (e: MouseEvent) => {\r\n    if (\r\n      e.target instanceof HTMLElement &&\r\n      !userInfoEl.current?.contains(e.target)\r\n    ) {\r\n      setClickUserIcon(false);\r\n      setHoverUserIcon(false);\r\n    }\r\n  };\r\n\r\n  const onMouseEnterUserIcon = useCallback(() => {\r\n    if (clickUserIcon) return;\r\n    setHoverUserIcon(true);\r\n  }, [hoverUserIcon, clickUserIcon]);\r\n\r\n  const onMouseLeaveUserIcon = useCallback(() => {\r\n    if (clickUserIcon) return;\r\n    setHoverUserIcon(false);\r\n  }, [hoverUserIcon, clickUserIcon]);\r\n\r\n  const onClickLogOut = async () => {\r\n    sessionStorage.clear();\r\n    upadateUserState({ logInState: 'LoggingOut' }).then(async () => {\r\n      navigate('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BottomContainer>\r\n        <MobileNav>\r\n          <MobileNavList>\r\n            <MobileNavItem>\r\n              <NavLink to={'/my_page'} className=\"nav_item\">\r\n                <MdOutlineManageAccounts />\r\n                마이 페이지\r\n              </NavLink>\r\n            </MobileNavItem>\r\n            <MobileNavItem>\r\n              <h1>\r\n                <NavLink to={'/'}>\r\n                  <HiOutlineHome />\r\n                  ImageUs\r\n                </NavLink>\r\n              </h1>\r\n            </MobileNavItem>\r\n            <MobileNavItem>\r\n              <NavLink to={'/people_management'} className=\"nav_item\">\r\n                <CgUserList />\r\n                친구목록\r\n              </NavLink>\r\n            </MobileNavItem>\r\n          </MobileNavList>\r\n        </MobileNav>\r\n        <DeskTopNav>\r\n          <MobileNavList>\r\n            <MobileNavItem>\r\n              <h1>\r\n                <NavLink to={'/'}>\r\n                  <HiOutlineHome />\r\n                  ImageUs\r\n                </NavLink>\r\n              </h1>\r\n            </MobileNavItem>\r\n            <MobileNavItem>\r\n              <NavLink to={'/my_page'} className=\"navigate_link\">\r\n                마이 페이지\r\n              </NavLink>\r\n            </MobileNavItem>\r\n            <MobileNavItem>\r\n              <NavLink to={'/people_management'} className=\"navigate_link\">\r\n                친구목록\r\n              </NavLink>\r\n            </MobileNavItem>\r\n          </MobileNavList>\r\n        </DeskTopNav>\r\n        <div className=\"user_icon\">\r\n          <div\r\n            className=\"user_icon_d\"\r\n            onMouseEnter={onMouseEnterUserIcon}\r\n            onMouseLeave={onMouseLeaveUserIcon}\r\n          >\r\n            <span\r\n              className=\"user_icon_s\"\r\n              onClick={() => setClickUserIcon((prev) => !prev)}\r\n            >\r\n              <IconContext.Provider\r\n                value={{\r\n                  size: '100%',\r\n                  style: { display: 'inline-block' },\r\n                }}\r\n              >\r\n                <BiUserCircle />\r\n              </IconContext.Provider>\r\n            </span>\r\n            {(clickUserIcon || hoverUserIcon) && (\r\n              <UserBox ref={userInfoEl}>\r\n                <UserInfo>\r\n                  <div className={'info_words'}>\r\n                    <p>\r\n                      <strong>{userInfo.userInfo?.name ?? 'loading..'}</strong>{' '}\r\n                      님 어서오세요!\r\n                    </p>\r\n                    <p>\r\n                      <strong>email:</strong>{' '}\r\n                      {userInfo.userInfo?.email ?? '로딩중입니다..'}\r\n                    </p>\r\n                  </div>\r\n                </UserInfo>\r\n                <LogoutBtn>\r\n                  <Button\r\n                    className=\"error\"\r\n                    type=\"button\"\r\n                    onClick={onClickLogOut}\r\n                  >\r\n                    로그아웃\r\n                  </Button>\r\n                </LogoutBtn>\r\n              </UserBox>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </BottomContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import styled from '@emotion/styled';\r\nimport { keyframes, css } from '@emotion/react';\r\n\r\nconst sliceAnimate = keyframes`\r\n    0% {\r\n      bottom: 0px;\r\n    }\r\n    60% {\r\n      width: 100%;\r\n\r\n      left: 6px;\r\n    }\r\n    100% {\r\n      width: 100%;\r\n\r\n      left: 0px;\r\n      bottom: 0px;\r\n\r\n      padding-left: 0;\r\n    }\r\n  `;\r\n\r\nconst check01Animate = keyframes`\r\n    0% {\r\n    width: 4px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n    }\r\n    50% {\r\n    width: 0px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n    }\r\n    51% {\r\n    width: 0px;\r\n    top: 8px;\r\n    transform: rotate(45deg);\r\n    }\r\n    100% {\r\n    width: 5px;\r\n    top: 8px;\r\n    transform: rotate(45deg);\r\n    }\r\n`;\r\n\r\nconst check02Animate = keyframes`\r\n    0% {\r\n    width: 4px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n    }\r\n    50% {\r\n    width: 0px;\r\n    top: auto;\r\n    transform: rotate(0);\r\n    }\r\n    51% {\r\n    width: 0px;\r\n    top: 8px;\r\n    transform: rotate(-45deg);\r\n    }\r\n    100% {\r\n    width: 10px;\r\n    top: 8px;\r\n    transform: rotate(-45deg);\r\n    }\r\n`;\r\n\r\nconst fireworkAnimate = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    box-shadow: 0 0 0 -2px #4F29F0, 0 0 0 -2px #4F29F0, 0 0 0 -2px #4F29F0, 0 0 0 -2px #4F29F0, 0 0 0 -2px #4F29F0, 0 0 0 -2px #4F29F0;\r\n  }\r\n  30% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    box-shadow: 0 -15px 0 0px #4F29F0, 14px -8px 0 0px #4F29F0, 14px 8px 0 0px #4F29F0, 0 15px 0 0px #4F29F0, -14px 8px 0 0px #4F29F0, -14px -8px 0 0px #4F29F0;\r\n  }\r\n  `;\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n\r\n  padding: 10px 45px;\r\n  background: white;\r\n\r\n  .check_box {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    & > button {\r\n      width: 50px;\r\n      height: 25px;\r\n      padding: 0px;\r\n      font-size: 15px;\r\n    }\r\n  }\r\n\r\n  & .check_label_box {\r\n    display: inline-flex;\r\n    align-items: center;\r\n\r\n    height: 35px;\r\n\r\n    cursor: pointer;\r\n\r\n    .mark_box {\r\n      display: flex;\r\n      position: absolute;\r\n      left: 0px;\r\n\r\n      gap: 5px;\r\n\r\n      span {\r\n        border-radius: 5px;\r\n      }\r\n\r\n      .room_manager_mark {\r\n        background-color: antiquewhite;\r\n      }\r\n\r\n      .onself_mark {\r\n        background-color: lavender;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DataCheckInput = styled.input<{ boxName: string }>`\r\n  display: grid;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  height: 15px;\r\n  width: 15px;\r\n  border: 0;\r\n  margin: 0 6px 0 0;\r\n\r\n  background: #fff;\r\n  outline: none;\r\n  appearance: none;\r\n  cursor: pointer;\r\n\r\n  &:checked::before {\r\n    animation: ${check01Animate} 0.4s ease forwards;\r\n  }\r\n\r\n  &:checked::after {\r\n    animation: ${check02Animate} 0.4s ease forwards;\r\n  }\r\n\r\n  &:checked ~ label {\r\n    font-weight: bolder;\r\n  }\r\n\r\n  &:checked ~ label::before {\r\n    animation: ${(props) =>\r\n      props.boxName === 'member'\r\n        ? ''\r\n        : css`\r\n            ${sliceAnimate} 0.4s ease forwards\r\n          `};\r\n    width: ${(props) => (props.boxName === 'member' ? '0' : '')};\r\n    /* animation: ${sliceAnimate} 0.4s ease forwards; */\r\n  }\r\n\r\n  &:checked ~ label::after {\r\n    animation: ${fireworkAnimate} 0.5s ease forwards 0.1s;\r\n  }\r\n\r\n  &::before {\r\n    width: 0px;\r\n    right: 60%;\r\n    transform-origin: right bottom;\r\n  }\r\n\r\n  &::after {\r\n    width: 0px;\r\n    left: 40%;\r\n    transform-origin: left bottom;\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    height: 2px;\r\n    top: auto;\r\n    background: #4f29f0;\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nexport const DataLabel = styled.label`\r\n  position: relative;\r\n  display: grid;\r\n  align-items: center;\r\n  grid-auto-flow: column;\r\n\r\n  width: fit-content;\r\n\r\n  color: #414856;\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n\r\n  &::before {\r\n    height: 2px;\r\n    width: 8px;\r\n    left: -18px;\r\n    border-radius: 2px;\r\n\r\n    background: #4f29f0;\r\n    transition: background 0.3s ease;\r\n  }\r\n\r\n  &::after {\r\n    height: 4px;\r\n    width: 4px;\r\n    top: 8px;\r\n    left: -25px;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n  }\r\n`;\r\n","import React, { memo } from 'react';\r\nimport { Button } from '@styles/Button';\r\nimport { Container, DataCheckInput, DataLabel } from './styles';\r\n\r\ninterface Props {\r\n  data: { id: number; data: string }[];\r\n  currentLoginId?: number | string;\r\n  boxInfo: { boxName: string; hostId?: number };\r\n  readOnly?: boolean;\r\n  dataClickCallBack?: (roomId: number) => void;\r\n  onClickDeleteMember?: (memberId: number) => () => void;\r\n}\r\n\r\nconst CollapseListBox = ({\r\n  data,\r\n  boxInfo,\r\n  currentLoginId,\r\n  readOnly,\r\n  dataClickCallBack,\r\n  onClickDeleteMember,\r\n}: Props) => {\r\n  const preventClickCSS = {\r\n    pointerEvents: readOnly\r\n      ? ('none' as React.CSSProperties['pointerEvents'])\r\n      : ('auto' as React.CSSProperties['pointerEvents']),\r\n  };\r\n\r\n  const onClickDataLabel = (id: number) => () => {\r\n    if (dataClickCallBack) dataClickCallBack(id);\r\n  };\r\n\r\n  const labelMarginCSS = {\r\n    marginLeft: '70px',\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {data.map((item) => {\r\n        return (\r\n          <div key={item.id} className=\"check_box\">\r\n            <div className=\"check_label_box\" style={preventClickCSS}>\r\n              <DataCheckInput\r\n                type=\"radio\"\r\n                id={`${item.id}`}\r\n                name={`radio-group-${boxInfo.boxName}`}\r\n                defaultChecked={'' + currentLoginId === '' + item.id}\r\n                boxName={boxInfo.boxName}\r\n              />\r\n\r\n              <DataLabel\r\n                htmlFor={`${item.id}`}\r\n                onClick={onClickDataLabel(item.id)}\r\n              >\r\n                <div className=\"mark_box\">\r\n                  {boxInfo?.hostId === item.id && (\r\n                    <span className=\"room_manager_mark\">방장</span>\r\n                  )}\r\n                  {currentLoginId === item.id && (\r\n                    <span className=\"onself_mark\">나</span>\r\n                  )}\r\n                </div>\r\n                <span\r\n                  className=\"item_text\"\r\n                  style={\r\n                    boxInfo?.hostId === item.id || currentLoginId === item.id\r\n                      ? labelMarginCSS\r\n                      : undefined\r\n                  }\r\n                >\r\n                  {item.data}\r\n                </span>\r\n              </DataLabel>\r\n            </div>\r\n            {boxInfo.boxName === 'member' &&\r\n              boxInfo.hostId === currentLoginId &&\r\n              boxInfo?.hostId !== item.id &&\r\n              onClickDeleteMember && (\r\n                <Button\r\n                  className=\"error\"\r\n                  onClick={onClickDeleteMember(item.id)}\r\n                >\r\n                  강퇴\r\n                </Button>\r\n              )}\r\n          </div>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default memo(CollapseListBox);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Subtitle = styled.div`\r\n  display: inline-flex;\r\n\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Collapse = styled.span<{ collapse: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    transition: transform 0.3s, opacity 0.1s;\r\n    ${({ collapse }) =>\r\n      collapse &&\r\n      `\r\n    transform: rotate(90deg);\r\n    `}\r\n  }\r\n`;\r\n\r\nexport const CreateBtnBox = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { IoMdArrowDropright } from 'react-icons/io';\r\nimport { mutate } from 'swr';\r\n\r\nimport ActionButton from '@styles/ActiveButton';\r\nimport Spinner from '@styles/Spinner';\r\nimport CollapseListBox from '../CollapseListBox';\r\nimport { Collapse, CreateBtnBox, Subtitle } from './styles';\r\n\r\ninterface Props {\r\n  roomlist?: { id: number; data: string }[];\r\n  closeSidebar: () => void;\r\n}\r\n\r\nconst ChannelList = memo(({ roomlist, closeSidebar }: Props) => {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const navigate = useNavigate();\r\n\r\n  const [channelCollapse, setChannelCollapse] = useState<boolean>(true);\r\n\r\n  const onClickRoom = useCallback((roomId: number) => {\r\n    closeSidebar();\r\n    navigate(`/room/${roomId}`);\r\n  }, []);\r\n\r\n  const toggleChannelCollapse = useCallback(\r\n    () => setChannelCollapse((prev) => !prev),\r\n    [],\r\n  );\r\n\r\n  if (!roomlist) return <Spinner />;\r\n\r\n  return (\r\n    <div>\r\n      <Subtitle onClick={toggleChannelCollapse}>\r\n        <Collapse collapse={channelCollapse}>\r\n          <IoMdArrowDropright />\r\n        </Collapse>\r\n        <span>Channels</span>\r\n      </Subtitle>\r\n      {channelCollapse && (\r\n        <>\r\n          <CollapseListBox\r\n            data={roomlist}\r\n            dataClickCallBack={onClickRoom}\r\n            currentLoginId={roomId}\r\n            boxInfo={{ boxName: 'channel' }}\r\n          />\r\n          <CreateBtnBox>\r\n            <ActionButton\r\n              onClickBtn={() => {\r\n                mutate('modalState', { currentModalState: 'creatRoom' });\r\n              }}\r\n              btnTitle={'+'}\r\n            />\r\n          </CreateBtnBox>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ChannelList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Subtitle = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Collapse = styled.span<{ collapse: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    transition: transform 0.3s, opacity 0.1s;\r\n    ${({ collapse }) =>\r\n      collapse &&\r\n      `\r\n    transform: rotate(90deg);\r\n    `}\r\n  }\r\n`;\r\n\r\nexport const CreateBtnBox = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\nimport useSWRMutation from 'swr/mutation';\r\nimport { useParams } from 'react-router';\r\n\r\nimport { IoMdArrowDropright } from 'react-icons/io';\r\nimport { deleteMemberFetcher } from '@utils/roomDataFetcher';\r\nimport { DRoomData } from '@typing/db';\r\nimport ActionButton from '@styles/ActiveButton';\r\nimport Spinner from '@styles/Spinner';\r\n\r\nimport CollapseListBox from '../CollapseListBox';\r\nimport { Collapse, CreateBtnBox, Subtitle } from './styles';\r\n\r\ninterface Props {\r\n  currentRoomInfo: DRoomData;\r\n}\r\n\r\nconst MemberList = memo(({ currentRoomInfo }: Props) => {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const { mutate } = useSWRConfig();\r\n\r\n  const { data: userInfo } = useSWR('/user/my');\r\n  const { trigger: deleteMemberTrigger } = useSWRMutation(\r\n    `/room/${roomId}/user`,\r\n    deleteMemberFetcher,\r\n  );\r\n\r\n  const [memberCollapse, setMemberCollapse] = useState<boolean>(true);\r\n\r\n  const toggleMemberCollapse = useCallback(\r\n    () => setMemberCollapse((prev) => !prev),\r\n    [],\r\n  );\r\n\r\n  const collapseListBoxData = useCallback(() => {\r\n    const { userlist } = currentRoomInfo;\r\n\r\n    const data = userlist.map((userData) => ({\r\n      id: userData.id,\r\n      data: userData.name,\r\n    }));\r\n    return [...data];\r\n  }, [currentRoomInfo]);\r\n\r\n  const onClickDeleteMember = (memberId: number) => () => {\r\n    deleteMemberTrigger(memberId).then(() => {\r\n      const userId = sessionStorage.getItem('user_id');\r\n      mutate(`/user/${userId}/roomlist`);\r\n    });\r\n  };\r\n\r\n  if (!currentRoomInfo) return <Spinner />;\r\n\r\n  return (\r\n    <div>\r\n      <Subtitle onClick={toggleMemberCollapse}>\r\n        <Collapse collapse={memberCollapse}>\r\n          <IoMdArrowDropright />\r\n        </Collapse>\r\n        <span>Members</span>\r\n      </Subtitle>\r\n      {memberCollapse && (\r\n        <>\r\n          <CollapseListBox\r\n            data={collapseListBoxData()}\r\n            currentLoginId={userInfo.userInfo.id}\r\n            boxInfo={{\r\n              boxName: 'member',\r\n              hostId: currentRoomInfo.host_user_id,\r\n            }}\r\n            onClickDeleteMember={onClickDeleteMember}\r\n            readOnly\r\n          />\r\n          <CreateBtnBox>\r\n            <ActionButton\r\n              onClickBtn={() => {\r\n                mutate('modalState', { currentModalState: 'inviteMember' });\r\n              }}\r\n              btnTitle={'+'}\r\n            />\r\n          </CreateBtnBox>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MemberList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Background = styled.div`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  top: 0;\r\n\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n`;\r\n\r\nexport const Wrapper = styled.div<{ show: boolean }>`\r\n  position: absolute;\r\n  top: 0;\r\n\r\n  width: 350px;\r\n  height: 100%;\r\n  z-index: 100;\r\n  box-sizing: border-box;\r\n\r\n  background-color: transparent;\r\n  box-shadow: rgb(0 0 0 / 8%) 2px 0px 2px;\r\n  user-select: none;\r\n\r\n  transition: transform 0.5s;\r\n  transform: translateX(-350px);\r\n\r\n  ${({ show }) =>\r\n    show &&\r\n    `\r\n    visibility: visible;\r\n    transform: translate3d(0, 0, 0);\r\n    `}\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  height: 100%;\r\n  & > div {\r\n    border-bottom: 1px solid rgb(237, 241, 245);\r\n    padding: 9px 8px 8px 6px;\r\n  }\r\n`;\r\n\r\nexport const ContentTabs = styled.ul`\r\n  position: relative;\r\n\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 100%;\r\n\r\n  list-style: none;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Tab = styled.li`\r\n  float: left;\r\n\r\n  width: calc(100% / 2);\r\n  height: 40px;\r\n\r\n  & .tab_label {\r\n    position: relative;\r\n    display: inline-block;\r\n\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 8px 20px;\r\n\r\n    border: 1px solid #ccc;\r\n    background: #eee;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & [name='tab-group-1'] {\r\n    display: none;\r\n  }\r\n\r\n  & .tab_content {\r\n    position: absolute;\r\n    top: 40px;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    padding: 0;\r\n\r\n    box-sizing: border-box;\r\n    background: white;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  & .tab_content > .tab_content_box {\r\n    box-sizing: border-box;\r\n    height: 100%;\r\n    padding: 10px;\r\n\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  & [type='radio']:checked ~ label {\r\n    background: white;\r\n    border-bottom: 1px solid white;\r\n    z-index: 2;\r\n  }\r\n\r\n  & [type='radio']:checked + label + .tab_content {\r\n    z-index: 10;\r\n  }\r\n\r\n  & [type='radio']:checked + label + .tab_content > .tab_content_box {\r\n    display: block;\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n","import React, { memo, useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport useSWR from 'swr';\r\nimport { useParams } from 'react-router';\r\n\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nimport { DRoomData } from '@typing/db';\r\nimport { getUserRoomListFetcher } from '@utils/userDataFetcher';\r\nimport ChannelList from './ChannelList';\r\nimport MemberList from './MemberList';\r\nimport {\r\n  Background,\r\n  ContentTabs,\r\n  ContentWrapper,\r\n  Tab,\r\n  Wrapper,\r\n} from './styles';\r\n\r\ninterface SidebarProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nconst SideBar = memo(({ show, close }: SidebarProps) => {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const userId = sessionStorage.getItem('user_id');\r\n\r\n  const { data: roomListInfo } = useSWR(\r\n    `/user/${userId}/roomlist`,\r\n    getUserRoomListFetcher,\r\n    {\r\n      revalidateIfStale: false,\r\n      revalidateOnFocus: false,\r\n      revalidateOnReconnect: false,\r\n    },\r\n  );\r\n\r\n  const sideBarEl = useRef<HTMLDivElement>(null);\r\n  const backgroundEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    backgroundEl.current?.addEventListener('click', handleCloseSidebar);\r\n    return () => {\r\n      backgroundEl.current?.removeEventListener('click', handleCloseSidebar);\r\n    };\r\n  }, [backgroundEl.current, show]);\r\n\r\n  const handleCloseSidebar = useCallback(\r\n    (e: MouseEvent) => {\r\n      if (\r\n        e.target instanceof HTMLElement &&\r\n        !sideBarEl.current?.contains(e.target)\r\n      ) {\r\n        close();\r\n      }\r\n    },\r\n    [show],\r\n  );\r\n\r\n  const extractRoomList = useMemo(() => {\r\n    if (!roomListInfo) return;\r\n\r\n    const roomListData = roomListInfo.map((data: DRoomData) => {\r\n      return {\r\n        id: data.id,\r\n        data: data.title,\r\n      };\r\n    });\r\n\r\n    return [...roomListData];\r\n  }, [roomListInfo]);\r\n\r\n  const extractCurrentUserList = useMemo(() => {\r\n    if (!roomListInfo) return;\r\n\r\n    const currentRoomData = roomListInfo.find(\r\n      (data: DRoomData) => '' + data.id === roomId,\r\n    );\r\n    return { ...currentRoomData };\r\n  }, [roomId, roomListInfo]);\r\n\r\n  return (\r\n    <>\r\n      {show && <Background ref={backgroundEl} />}\r\n      <Wrapper show={show} ref={sideBarEl}>\r\n        <ContentWrapper>\r\n          <ContentTabs>\r\n            <Tab>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"tab-1\"\r\n                name=\"tab-group-1\"\r\n                defaultChecked\r\n              />\r\n              <label className=\"tab_label\" htmlFor=\"tab-1\">\r\n                방 목록\r\n              </label>\r\n              <div className=\"tab_content\">\r\n                <Scrollbars>\r\n                  <div className=\"tab_content_box\">\r\n                    <ChannelList\r\n                      roomlist={extractRoomList}\r\n                      closeSidebar={close}\r\n                    />\r\n                  </div>\r\n                </Scrollbars>\r\n              </div>\r\n            </Tab>\r\n            <Tab>\r\n              <input type=\"radio\" id=\"tab-2\" name=\"tab-group-1\" />\r\n              <label className=\"tab_label\" htmlFor=\"tab-2\">\r\n                멤버목록\r\n              </label>\r\n              <div className=\"tab_content\">\r\n                <Scrollbars>\r\n                  <div className=\"tab_content_box\">\r\n                    <MemberList currentRoomInfo={extractCurrentUserList} />\r\n                  </div>\r\n                </Scrollbars>\r\n              </div>\r\n            </Tab>\r\n          </ContentTabs>\r\n        </ContentWrapper>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SideBar;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  width: 300px;\r\n  height: 200px;\r\n  border-radius: 12px;\r\n  padding: 40px 30px;\r\n\r\n  box-sizing: border-box;\r\n  background-color: white;\r\n  box-shadow: 0 0 15px 1px rgb(0 0 0 / 40%);\r\n\r\n  & > p {\r\n    margin: 0;\r\n    font-size: 18px;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  .btn_group {\r\n    display: flex;\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport useSWR, { mutate } from 'swr';\r\nimport useSWRMutation from 'swr/mutation';\r\nimport { deleteRoomImgFetcher } from '@utils/roomDataFetcher';\r\nimport { leaveRoomFetcher } from '@utils/userDataFetcher';\r\nimport { Button } from '@styles/Button';\r\nimport { Wrapper } from './styles';\r\nimport { deleteUserImage } from '@utils/imageFetcher';\r\n\r\nconst AlertBox = () => {\r\n  const userId = sessionStorage.getItem('user_id');\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const navigate = useNavigate();\r\n\r\n  const { data: modalStateData } = useSWR('modalState');\r\n  const alertBoxEl = useRef<HTMLDivElement>(null);\r\n  const currentModalState = modalStateData?.currentModalState;\r\n  const propsData = modalStateData?.data;\r\n\r\n  const { trigger: deleteRoomImgTrigger } = useSWRMutation(\r\n    `/room/${roomId}/image`,\r\n    deleteRoomImgFetcher,\r\n  );\r\n  const { trigger: deleteUserImgTrigger } = useSWRMutation(\r\n    '/image',\r\n    deleteUserImage,\r\n  );\r\n  const { trigger: leaveRoomTrigger } = useSWRMutation(\r\n    `/user/${userId}/room`,\r\n    leaveRoomFetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('click', handleCloseAlert);\r\n    return () => {\r\n      window.removeEventListener('click', handleCloseAlert);\r\n    };\r\n  }, []);\r\n\r\n  const handleCloseAlert = (e: MouseEvent) => {\r\n    if (\r\n      e.target instanceof HTMLElement &&\r\n      currentModalState === 'alert' &&\r\n      !alertBoxEl.current?.contains(e.target)\r\n    ) {\r\n      mutate('modalState', { currentModalState: '' });\r\n    }\r\n  };\r\n\r\n  const executeFetch = () => {\r\n    if (propsData.mutateKey === `/room/${roomId}/image`) {\r\n      deleteRoomImgTrigger(propsData.imageId).then((dataId) => {\r\n        mutate('roomImageDelete', dataId);\r\n      });\r\n    } else if (propsData.mutateKey === `/user/${userId}/room`) {\r\n      leaveRoomTrigger(roomId).then(() => {\r\n        navigate('/');\r\n      });\r\n    } else {\r\n      deleteUserImgTrigger(propsData.imageId).then((dataId) => {\r\n        mutate('userImageDelete', dataId);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={alertBoxEl}>\r\n      <p>{propsData?.content}</p>\r\n      <div className=\"btn_group\">\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            executeFetch();\r\n            mutate('modalState', { currentModalState: '' });\r\n          }}\r\n        >\r\n          확인\r\n        </Button>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            mutate('modalState', { currentModalState: '' });\r\n          }}\r\n        >\r\n          취소\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AlertBox;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ModalBoxContainer = styled.div`\r\n  width: 450px;\r\n  height: 80%;\r\n  border-radius: 6px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 600px;\r\n  }\r\n`;\r\n\r\nexport const ModalBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: 100%;\r\n  padding: 20px 0;\r\n  border-radius: 12px;\r\n\r\n  box-sizing: border-box;\r\n  background-color: white;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  flex: 1;\r\n\r\n  height: 30%;\r\n  margin: 5px 0;\r\n  font-size: 18px;\r\n\r\n  text-align: center;\r\n\r\n  span {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nexport const CloseBtn = styled.div`\r\n  float: right;\r\n  display: inline-block;\r\n  position: relative;\r\n  right: 5px;\r\n\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n    vertical-align: top;\r\n  }\r\n`;\r\n\r\nexport const ContentBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 7;\r\n\r\n  height: 70%;\r\n  width: 100%;\r\n\r\n  box-sizing: border-box;\r\n\r\n  .result_content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    height: calc(100% - 60px);\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: calc(100% - 60px);\r\n\r\n  overflow: auto;\r\n`;\r\n\r\nexport const RoomName = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 40px;\r\n  margin: auto;\r\n\r\n  text-align: center;\r\n  box-shadow: 0 0 2px 0px rgb(0 0 0 / 40%);\r\n\r\n  & > label {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const MemeberList = styled.div`\r\n  flex: 6;\r\n\r\n  .member_list {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    /* max-width: 50%; */\r\n    margin: auto;\r\n    /* padding: 1.5rem 0; */\r\n    padding: 1.5rem;\r\n\r\n    overflow-y: auto;\r\n\r\n    & .friend_info_row {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      gap: 3rem;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: whitesmoke;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ActionBtn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 60px;\r\n  padding: 0 20px;\r\n\r\n  box-shadow: 0px -1px 2px -1px rgb(0 0 0 / 40%);\r\n`;\r\n\r\nexport const ResultRoomName = styled.div`\r\n  flex: 2;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  max-width: 80%;\r\n  gap: 3rem;\r\n`;\r\n\r\nexport const ResultMembers = styled.div`\r\n  flex: 6;\r\n  max-width: 80%;\r\n\r\n  ul li {\r\n    list-style: circle;\r\n  }\r\n`;\r\n\r\nexport const ResultActionBtn = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 60px;\r\n  padding: 0 20px;\r\n\r\n  box-sizing: border-box;\r\n`;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\nimport useSWRMutation from 'swr/mutation';\r\nimport { AxiosError } from 'axios';\r\n\r\nimport { AiFillCheckCircle, AiOutlineCheckCircle } from 'react-icons/ai';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nimport { DFriendData } from '@typing/db';\r\nimport useInput from '@hooks/useInput';\r\nimport { getUserFriendList } from '@utils/userDataFetcher';\r\nimport { createRoomFetcher } from '@utils/roomDataFetcher';\r\nimport { Button } from '@styles/Button';\r\nimport {\r\n  ActionBtn,\r\n  Content,\r\n  ContentBox,\r\n  MemeberList,\r\n  ModalBox,\r\n  ModalBoxContainer,\r\n  ResultActionBtn,\r\n  ResultMembers,\r\n  ResultRoomName,\r\n  RoomName,\r\n  Title,\r\n} from './styles';\r\n\r\ntype AddCheckFriendData = DFriendData & { check: boolean };\r\n\r\nconst CreateRoomModal = () => {\r\n  const { mutate } = useSWRConfig();\r\n\r\n  const { data: friendList } = useSWR('friendlist', getUserFriendList, {\r\n    revalidateIfStale: false,\r\n    revalidateOnFocus: false,\r\n    revalidateOnReconnect: false,\r\n  });\r\n  const { trigger: createRoomTrigger } = useSWRMutation(\r\n    '/room',\r\n    createRoomFetcher,\r\n  );\r\n\r\n  const [currentStage, setCurrentStage] = useState(0);\r\n  const [friendCheckList, setFriendCheckList] = useState<AddCheckFriendData[]>(\r\n    [],\r\n  );\r\n  const [selectListState, setSelectListState] = useState<AddCheckFriendData[]>(\r\n    [],\r\n  );\r\n  const [roomName, setRoomName, handleRoomName] = useInput('');\r\n\r\n  useEffect(() => {\r\n    if (!friendList) return;\r\n\r\n    const newList = friendList.map((data: DFriendData) => {\r\n      return {\r\n        ...data,\r\n        check: false,\r\n      };\r\n    });\r\n    setFriendCheckList([...newList]);\r\n  }, [friendList]);\r\n\r\n  useEffect(() => {\r\n    const selectMember = friendCheckList.filter(\r\n      (data: AddCheckFriendData) => data.check,\r\n    );\r\n    setSelectListState([...selectMember]);\r\n  }, [friendCheckList]);\r\n\r\n  const onClickPrevStage = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      e.stopPropagation();\r\n      setCurrentStage(0);\r\n    },\r\n    [selectListState],\r\n  );\r\n\r\n  const onClickNext = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      e.stopPropagation();\r\n      if (!roomName) {\r\n        alert('방이름이 입력되지 않았습니다.');\r\n        return;\r\n      } else {\r\n        setCurrentStage(1);\r\n      }\r\n    },\r\n    [selectListState, roomName],\r\n  );\r\n\r\n  const onClickFriendList = (friendId: number) => () => {\r\n    setFriendCheckList((prevData: AddCheckFriendData[]) => {\r\n      const newData = prevData.map((data: AddCheckFriendData) => {\r\n        if (data.id === friendId) return { ...data, check: !data.check };\r\n        return { ...data };\r\n      });\r\n      return [...newData];\r\n    });\r\n  };\r\n\r\n  const onClickCreateRequest = async () => {\r\n    const selectMemberIdList = selectListState.map(\r\n      (data: AddCheckFriendData) => data.id,\r\n    );\r\n    createRoomTrigger({ selectMemberIdList, roomName })\r\n      .then(() => {\r\n        const userId = sessionStorage.getItem('user_id');\r\n        mutate(`/user/${userId}/roomlist`);\r\n        mutate('modalState', { currentModalState: '' });\r\n      })\r\n      .catch((err) => {\r\n        if (err instanceof AxiosError) {\r\n          alert('오류가 발생했습니다.');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ModalBoxContainer>\r\n      <ModalBox>\r\n        <Title>\r\n          <h1>방 생성하기</h1>\r\n        </Title>\r\n        {currentStage === 0 ? (\r\n          <ContentBox>\r\n            <Content>\r\n              <RoomName>\r\n                <label htmlFor=\"room_name\">방 이름</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"room_name\"\r\n                  onChange={handleRoomName}\r\n                  value={roomName}\r\n                />\r\n              </RoomName>\r\n              <MemeberList>\r\n                <Scrollbars>\r\n                  <div className=\"member_list\">\r\n                    {friendCheckList.length !== 0 ? (\r\n                      friendCheckList.map((friendData: AddCheckFriendData) => (\r\n                        <div\r\n                          key={friendData.id}\r\n                          className=\"friend_info_row\"\r\n                          onClick={onClickFriendList(friendData.id)}\r\n                        >\r\n                          {friendData.check ? (\r\n                            <AiFillCheckCircle />\r\n                          ) : (\r\n                            <AiOutlineCheckCircle />\r\n                          )}\r\n                          <div>\r\n                            <p>이름: {friendData.name}</p>\r\n                            <p>이메일: {friendData.email}</p>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p>등록된 친구가 없습니다.</p>\r\n                    )}\r\n                  </div>\r\n                </Scrollbars>\r\n              </MemeberList>\r\n            </Content>\r\n            <ActionBtn>\r\n              <Button type=\"button\" onClick={onClickNext}>\r\n                다음\r\n              </Button>\r\n            </ActionBtn>\r\n          </ContentBox>\r\n        ) : (\r\n          currentStage === 1 && (\r\n            <ContentBox>\r\n              <div className=\"result_content\">\r\n                <ResultRoomName>\r\n                  <h2>방 이름</h2>\r\n                  <p>{roomName}</p>\r\n                </ResultRoomName>\r\n                <ResultMembers>\r\n                  <h2>초대할 멤버</h2>\r\n                  {selectListState.length !== 0 ? (\r\n                    <ul>\r\n                      {selectListState\r\n                        .filter((data) => data.check)\r\n                        .map((friendData: AddCheckFriendData) => {\r\n                          return <li key={friendData.id}>{friendData.name}</li>;\r\n                        })}\r\n                    </ul>\r\n                  ) : (\r\n                    <p>등록된 친구가 없습니다.</p>\r\n                  )}\r\n                </ResultMembers>\r\n              </div>\r\n              <ResultActionBtn>\r\n                <Button type=\"button\" onClick={onClickPrevStage}>\r\n                  이전\r\n                </Button>\r\n                <Button type=\"button\" onClick={onClickCreateRequest}>\r\n                  생성하기\r\n                </Button>\r\n              </ResultActionBtn>\r\n            </ContentBox>\r\n          )\r\n        )}\r\n      </ModalBox>\r\n    </ModalBoxContainer>\r\n  );\r\n};\r\n\r\nexport default CreateRoomModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div<{\r\n  modalSize: {\r\n    modalWidth: string;\r\n    modalHeight: string;\r\n  };\r\n}>`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: ${(props) => props.modalSize.modalWidth}px;\r\n  height: ${(props) => props.modalSize.modalHeight}px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 0 15px 1px rgb(0 0 0 / 40%);\r\n\r\n  overflow: hidden;\r\n  background-color: white;\r\n\r\n  .head_info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    padding: 15px 30px;\r\n    width: 100%;\r\n    font-size: 80%;\r\n\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n\r\n    & > span {\r\n      color: black;\r\n    }\r\n\r\n    .writer {\r\n      font-size: 1.3rem;\r\n      font-weight: bolder;\r\n    }\r\n\r\n    .name_info {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      gap: 2rem;\r\n    }\r\n\r\n    .date_info {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 300px;\r\n    height: 400px;\r\n\r\n    .head_info {\r\n      .writer {\r\n        font-size: 1.2rem;\r\n      }\r\n      .name_info {\r\n        gap: 0.2rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ImageSection = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  height: 70%;\r\n`;\r\n\r\nexport const InfoSection = styled.div`\r\n  box-sizing: border-box;\r\n\r\n  padding: 20px;\r\n  flex-basis: 50%;\r\n`;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport useSWR from 'swr';\r\n\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { BiUserPin } from 'react-icons/bi';\r\n\r\nimport { ImageSection, Wrapper } from './styles';\r\n\r\nconst DetailPictureInfo = () => {\r\n  const { data: imageInfo } = useSWR('detailImageInfo');\r\n\r\n  const getCurrentModalSize = useCallback(() => {\r\n    const modalHeight = (window.innerHeight * 0.7).toFixed(3);\r\n    const modalWidth = Number.parseFloat(modalHeight).toFixed(3);\r\n\r\n    return {\r\n      modalWidth,\r\n      modalHeight,\r\n    };\r\n  }, [window.innerHeight]);\r\n  const [modalSize, setModalSize] = useState(getCurrentModalSize());\r\n\r\n  useEffect(() => {\r\n    let timeout: NodeJS.Timeout;\r\n    const handleResizeModal = () => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => {\r\n        const { modalWidth, modalHeight } = getCurrentModalSize();\r\n\r\n        setModalSize({\r\n          modalWidth,\r\n          modalHeight,\r\n        });\r\n      }, 300);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResizeModal);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResizeModal);\r\n    };\r\n  }, []);\r\n\r\n  const imageSizeCSS = useMemo(\r\n    () => (imageLink: string) => {\r\n      const imageObj = new Image();\r\n      imageObj.src = imageLink;\r\n\r\n      const boxAspect = window.innerWidth <= 600 ? 1.0714 : 1.4285;\r\n      const imageAspect = imageObj.width / imageObj.height;\r\n\r\n      if (boxAspect <= imageAspect) {\r\n        return {\r\n          width: 'auto',\r\n          height: '100%',\r\n        };\r\n      } else {\r\n        return {\r\n          width: '100%',\r\n          height: 'auto',\r\n        };\r\n      }\r\n    },\r\n    [imageInfo],\r\n  );\r\n\r\n  if (!imageInfo.data) {\r\n    alert('잘못된 이미지 정보입니다.');\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Wrapper modalSize={modalSize}>\r\n      <div className=\"head_info\">\r\n        <div className=\"name_info\">\r\n          <IconContext.Provider\r\n            value={{\r\n              size: '30px',\r\n              style: { display: 'inline-block' },\r\n            }}\r\n          >\r\n            <BiUserPin />\r\n          </IconContext.Provider>\r\n          <span className=\"writer\">{imageInfo.data.user_name}</span>\r\n        </div>\r\n        <div className=\"date_info\">\r\n          <span>일시: {imageInfo.data.created_at}</span>\r\n        </div>\r\n      </div>\r\n      <ImageSection>\r\n        <img\r\n          src={imageInfo.data.link}\r\n          style={imageSizeCSS(imageInfo.data.link)}\r\n          alt={`${imageInfo.index}번째 이미지`}\r\n        />\r\n      </ImageSection>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DetailPictureInfo;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 450px;\r\n  height: 80%;\r\n  border-radius: 6px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 600px;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: 100%;\r\n  border-radius: 12px;\r\n\r\n  background-color: white;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 18px;\r\n  padding: 5px 0;\r\n  text-align: center;\r\n\r\n  span {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 20px;\r\n\r\n  box-sizing: border-box;\r\n  overflow: auto;\r\n\r\n  .content_box {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    margin: 0 40px;\r\n\r\n    .content_select_box {\r\n      width: 100%;\r\n\r\n      .not_selected_ul {\r\n        display: table;\r\n\r\n        margin: auto;\r\n        padding: 0;\r\n        min-width: 150px;\r\n        border-spacing: 20px;\r\n\r\n        li {\r\n          display: table-row;\r\n\r\n          vertical-align: middle;\r\n          list-style: none;\r\n          cursor: pointer;\r\n\r\n          &:hover {\r\n            background-color: whitesmoke;\r\n          }\r\n\r\n          .list_layout {\r\n            display: flex;\r\n            gap: 1rem;\r\n          }\r\n\r\n          .list_check_icon {\r\n            display: flex;\r\n            align-items: center;\r\n          }\r\n\r\n          .list_info > p {\r\n            margin: 0;\r\n\r\n            &:first-of-type {\r\n              margin-bottom: 0.5rem;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .content_selected_box {\r\n      width: 100%;\r\n      text-align: center;\r\n\r\n      .selected_member_ul {\r\n        display: inline-block;\r\n\r\n        min-width: 100px;\r\n        margin: 0;\r\n\r\n        li {\r\n          list-style: circle;\r\n        }\r\n\r\n        & > li:not(& > li:last-child) {\r\n          margin-bottom: 0.5rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .content_subname {\r\n    text-align: center;\r\n  }\r\n\r\n  .content_btn {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\nimport useSWRMutation from 'swr/mutation';\r\nimport { useParams } from 'react-router';\r\n\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { AiFillCheckCircle, AiOutlineCheckCircle } from 'react-icons/ai';\r\n\r\nimport { getUserFriendList } from '@utils/userDataFetcher';\r\nimport { DFriendData } from '@typing/db';\r\nimport {\r\n  getUserListFetcher,\r\n  inviteFriendFetcher,\r\n} from '@utils/roomDataFetcher';\r\nimport { Button } from '@styles/Button';\r\nimport { Container, Content, Title, Wrapper } from './styles';\r\n\r\ntype AppendCheckFriendData = DFriendData & { check: boolean };\r\n\r\nconst InviteMemberModal = () => {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const { mutate } = useSWRConfig();\r\n\r\n  const { data: userFriendList } = useSWR('friendlist', getUserFriendList, {\r\n    revalidateOnFocus: false,\r\n  });\r\n  const { data: roomMemberList } = useSWR(\r\n    `/room/${roomId}/userlist`,\r\n    getUserListFetcher,\r\n    {\r\n      revalidateOnFocus: false,\r\n    },\r\n  );\r\n  const { trigger: inviteFriendsTrigger } = useSWRMutation(\r\n    `/room/${roomId}/user`,\r\n    inviteFriendFetcher,\r\n  );\r\n\r\n  const [checkFriendState, setCheckFriendState] = useState<\r\n    AppendCheckFriendData[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    if (!userFriendList || !roomMemberList) return;\r\n\r\n    const newList = userFriendList.filter((userInfo: DFriendData) => {\r\n      for (const roomUserInfo of roomMemberList) {\r\n        if (roomUserInfo.id === userInfo.id) return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    const appendCheckList = newList.map((data: DFriendData) => {\r\n      return { ...data, check: false };\r\n    });\r\n\r\n    setCheckFriendState([...appendCheckList]);\r\n  }, [userFriendList, roomMemberList]);\r\n\r\n  const onClickFriendList = (dataId: number) => () => {\r\n    const newData = checkFriendState.map((data) => {\r\n      if (data.id === dataId) {\r\n        return { ...data, check: !data.check };\r\n      }\r\n      return { ...data };\r\n    });\r\n    setCheckFriendState([...newData]);\r\n  };\r\n\r\n  const onClickInviteFriends = useCallback(() => {\r\n    const selectDataId = checkFriendState\r\n      .filter((data) => data.check)\r\n      .map((data) => data.id);\r\n\r\n    if (selectDataId.length === 0) {\r\n      alert('선택된 친구가 없습니다.');\r\n    } else {\r\n      inviteFriendsTrigger(selectDataId).then(() => {\r\n        const userId = sessionStorage.getItem('user_id');\r\n        mutate(`/user/${userId}/roomlist`);\r\n        mutate('modalState', { currentModalState: '' });\r\n      });\r\n    }\r\n  }, [checkFriendState]);\r\n\r\n  const checkFriendList = useMemo(\r\n    () => checkFriendState.filter((data) => data.check),\r\n    [checkFriendState],\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Title>\r\n          <h1>친구 초대하기</h1>\r\n        </Title>\r\n        <Scrollbars>\r\n          <Content>\r\n            <div className=\"content_box\">\r\n              <div className=\"content_select_box\">\r\n                <div className=\"content_subname\">\r\n                  <h2>초대할 친구 목록</h2>\r\n                </div>\r\n                <ul className=\"not_selected_ul\">\r\n                  {checkFriendState.length !== 0 ? (\r\n                    checkFriendState.map((data: AppendCheckFriendData) => (\r\n                      <li key={data.id} onClick={onClickFriendList(data.id)}>\r\n                        <div className=\"list_layout\">\r\n                          <div className=\"list_check_icon\">\r\n                            {data.check ? (\r\n                              <AiFillCheckCircle />\r\n                            ) : (\r\n                              <AiOutlineCheckCircle />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"list_info\">\r\n                            <p>이름: {data.name}</p>\r\n                            <p>이메일: {data.email}</p>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    ))\r\n                  ) : (\r\n                    <p>등록할 친구가 없습니다.</p>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n              <div className=\"content_selected_box\">\r\n                <div className=\"content_subname\">\r\n                  <h2>선택한 친구들</h2>\r\n                </div>\r\n                {checkFriendList.length !== 0 ? (\r\n                  <ul className=\"selected_member_ul\">\r\n                    {checkFriendList.map((data) => (\r\n                      <li key={data.id}>{data.name}</li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>선택한 친구가 없습니다.</p>\r\n                )}\r\n              </div>\r\n              <div className=\"content_btn\">\r\n                <Button type=\"button\" onClick={onClickInviteFriends}>\r\n                  초대하기\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Content>\r\n        </Scrollbars>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default InviteMemberModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  position: fixed;\r\n  z-index: 1000;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  top: 0;\r\n\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n`;\r\n\r\nexport const CloseBtn = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  top: 10px;\r\n  right: 10px;\r\n  z-index: 1002;\r\n\r\n  padding: 8px;\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: 25px;\r\n\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1001;\r\n\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n`;\r\n\r\nexport const ModalBox = styled.div`\r\n  display: flex;\r\n\r\n  h1,\r\n  h2 {\r\n    font-size: 16px;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  width: 495px;\r\n  max-width: calc(100vw - 40px);\r\n  min-width: 348px;\r\n  min-height: 391px;\r\n  border-radius: 12px;\r\n\r\n  background-color: white;\r\n  overflow: hidden;\r\n  user-select: none;\r\n\r\n  .content_box {\r\n    box-sizing: border-box;\r\n\r\n    width: 100%;\r\n    height: 360px;\r\n\r\n    overflow: auto;\r\n  }\r\n\r\n  .result_box {\r\n    display: flex;\r\n  }\r\n\r\n  .upload_btn button {\r\n    width: 100%;\r\n  }\r\n\r\n  @media screen and (max-width: 688px) {\r\n    .content_box {\r\n      overflow: auto;\r\n    }\r\n    .result_box {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalHeaderWrapper = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n\r\n  width: 100%;\r\n  height: 43px;\r\n  border-bottom: 1px solid rgb(219, 219, 219);\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  padding: 0 3px;\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 100%;\r\n  user-select: none;\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: calc(100% - 120px);\r\n  height: 43px;\r\n\r\n  h1 {\r\n    width: 100%;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const ModalImageBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 20px 10px;\r\n  height: 100%;\r\n\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const ImageDiv = styled.div<{ image: HTMLImageElement | null }>`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-image: ${(props) => `url(${props.image?.src})`};\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n\r\n  .default_image {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    height: 100%;\r\n    gap: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const ImageCover = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 2;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n  -webkit-user-select: none;\r\n  touch-action: none;\r\n`;\r\n\r\nexport const ChannelListBox = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  ul li {\r\n    cursor: pointer;\r\n    list-style: none;\r\n  }\r\n`;\r\n\r\nexport const ImageBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: calc(100% / 2);\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ListBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  width: calc(100% / 2);\r\n\r\n  & > div {\r\n    width: 100%;\r\n  }\r\n\r\n  h2 {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React, { DragEvent, useState, useEffect } from 'react';\r\nimport { useSWRConfig } from 'swr';\r\nimport useSWRMutation from 'swr/mutation';\r\n\r\nimport { useParams } from 'react-router';\r\nimport { BiImageAdd } from 'react-icons/bi';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nimport { postUploadImage } from '@utils/imageFetcher';\r\nimport { Button } from '@styles/Button';\r\nimport {\r\n  HeaderContainer,\r\n  ImageCover,\r\n  ImageDiv,\r\n  Modal,\r\n  ModalBox,\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalHeaderWrapper,\r\n  ModalImageBox,\r\n  ModalTitle,\r\n} from './styles';\r\n\r\nconst UploadModal = () => {\r\n  const { roomId } = useParams<{ roomId: string | undefined }>();\r\n  const { mutate } = useSWRConfig();\r\n  const { trigger: uploadImageTrigger } = useSWRMutation(\r\n    `/room/${roomId}/image`,\r\n    postUploadImage,\r\n  );\r\n\r\n  const [tmpImageData, setTmpImageData] = useState<HTMLImageElement | null>(\r\n    null,\r\n  );\r\n  const [imageData, setImageData] = useState<HTMLImageElement | null>(null);\r\n  const [uploadImageFile, setUploadImageFile] = useState<FormData | null>(null);\r\n\r\n  useEffect(() => {\r\n    const debounce = setTimeout(() => {\r\n      return setImageData(tmpImageData);\r\n    }, 300);\r\n    return () => clearTimeout(debounce);\r\n  }, [tmpImageData]);\r\n\r\n  const onClickUpload = () => {\r\n    if (!uploadImageFile) {\r\n      alert('이미지를 등록해주세요');\r\n      return;\r\n    }\r\n    uploadImageTrigger({ uploadImageFile }).then(() => {\r\n      mutate(`/room/${roomId}/unread-imagelist`);\r\n    });\r\n    mutate('modalState', { currentModalState: '' });\r\n  };\r\n\r\n  const onDropData = (e: DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    const formData: any = new FormData();\r\n    if (e.dataTransfer.items) {\r\n      for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n        if (e.dataTransfer.items[i].kind === 'file') {\r\n          const file = e.dataTransfer.items[i].getAsFile();\r\n          formData.append('image', file);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n        formData.append('image', e.dataTransfer.files[i]);\r\n      }\r\n    }\r\n    const image = new Image();\r\n    image.src = URL.createObjectURL(formData.get('image'));\r\n\r\n    setTmpImageData(image);\r\n    setUploadImageFile(formData);\r\n  };\r\n\r\n  const onDragOver = (e: DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalBox>\r\n        <Modal>\r\n          <HeaderContainer>\r\n            <ModalHeaderWrapper>\r\n              <ModalHeader>\r\n                <ModalTitle>\r\n                  <h1>방에 사진 업로드</h1>\r\n                </ModalTitle>\r\n              </ModalHeader>\r\n            </ModalHeaderWrapper>\r\n          </HeaderContainer>\r\n          <div className={'content_box'}>\r\n            <ModalImageBox onDrop={onDropData} onDragOver={onDragOver}>\r\n              <ImageDiv image={imageData}>\r\n                {!imageData && (\r\n                  <div className=\"default_image\">\r\n                    <IconContext.Provider\r\n                      value={{\r\n                        size: '50%',\r\n                        style: { display: 'inline-block' },\r\n                      }}\r\n                    >\r\n                      <BiImageAdd />\r\n                    </IconContext.Provider>\r\n                    <span>이미지를 끌어 놓으세요</span>\r\n                  </div>\r\n                )}\r\n              </ImageDiv>\r\n              <ImageCover />\r\n            </ModalImageBox>\r\n          </div>\r\n          <div className={'upload_btn'}>\r\n            <Button onClick={onClickUpload}>업로드</Button>\r\n          </div>\r\n        </Modal>\r\n      </ModalBox>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default UploadModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 100%;\r\n\r\n  overflow: auto;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 1000;\r\n\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 1001;\r\n\r\n  height: 100%;\r\n`;\r\n\r\nexport const CloseBtn = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 30px;\r\n  z-index: 1003;\r\n\r\n  padding: 8px;\r\n\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  svg {\r\n    width: 25px;\r\n    height: 25px;\r\n\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport useSWR, { mutate } from 'swr';\r\n\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport { Background, CloseBtn, Container, Wrapper } from './styles';\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ModalLayout = ({ children }: Props) => {\r\n  const { data: modalStateData } = useSWR('modalState');\r\n  const currentModalState = modalStateData?.currentModalState;\r\n  const modalEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('click', onClickOuterModal);\r\n    return () => {\r\n      window.removeEventListener('click', onClickOuterModal);\r\n    };\r\n  }, []);\r\n\r\n  const onClickOuterModal = (e: MouseEvent) => {\r\n    if (\r\n      e.target instanceof HTMLElement &&\r\n      !modalEl.current?.contains(e.target)\r\n    ) {\r\n      mutate('modalState', { currentModalState: '' });\r\n    }\r\n  };\r\n\r\n  if (!currentModalState) return null;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Background\r\n        style={\r\n          currentModalState === 'alert'\r\n            ? { backgroundColor: 'rgb(0 0 0 / 0%)' }\r\n            : undefined\r\n        }\r\n      />\r\n      {currentModalState !== 'alert' && (\r\n        <>\r\n          <CloseBtn>\r\n            <div\r\n              onClick={() => {\r\n                mutate('modalState', { currentModalState: '' });\r\n              }}\r\n            >\r\n              <CgCloseO />\r\n            </div>\r\n          </CloseBtn>\r\n        </>\r\n      )}\r\n      <Container ref={modalEl}>{children}</Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ModalLayout;\r\n","import React from 'react';\r\n\r\nimport AlertBox from './AlertBoxModal';\r\nimport CreateRoomModal from './CreateRoomModal';\r\nimport DetailPictureInfo from './DetailPictureModal';\r\nimport InviteMemberModal from './InviteMemberModal';\r\nimport UploadModal from './UploadModal';\r\nimport ModalLayout from './ModalLayout';\r\n\r\ninterface IModalProps {\r\n  modalName: string;\r\n}\r\n\r\nconst Modal = ({ modalName }: IModalProps) => {\r\n  const currentModalComponent = () => {\r\n    switch (modalName) {\r\n      case 'detailPicture':\r\n        return <DetailPictureInfo />;\r\n\r\n      case 'alert':\r\n        return <AlertBox />;\r\n\r\n      case 'upload':\r\n        return <UploadModal />;\r\n\r\n      case 'creatRoom':\r\n        return <CreateRoomModal />;\r\n\r\n      case 'inviteMember':\r\n        return <InviteMemberModal />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  if (!modalName) return null;\r\n\r\n  return <ModalLayout>{currentModalComponent()}</ModalLayout>;\r\n};\r\n\r\nexport default Modal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  min-width: 520px;\r\n  height: 100%;\r\n\r\n  overflow: hidden;\r\n  user-select: none;\r\n`;\r\n\r\nexport const OuterContainer = styled.div<{\r\n  showModal: string | undefined;\r\n}>`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  ${({ showModal }) =>\r\n    showModal &&\r\n    `\r\n    position: fixed;\r\n  `}\r\n`;\r\n\r\nexport const InnerContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: rgb(255, 255, 255);\r\n`;\r\n\r\nexport const ModalWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n","import React, { createContext, useCallback, useMemo, useState } from 'react';\r\nimport useSWR from 'swr';\r\n\r\nimport NavigationBar from '@components/NavigationBar';\r\nimport SideBar from '@components/SideBar';\r\nimport Modal from '@components/Modal';\r\nimport { OuterContainer, InnerContainer, Wrapper } from './styles';\r\nimport Spinner from '@styles/Spinner';\r\n\r\ninterface AppLayoutProps {\r\n  children?: React.ReactNode;\r\n  roomId?: string;\r\n  isImageRoom?: boolean;\r\n}\r\n\r\ninterface ISidebarContext {\r\n  setSidebarState: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const SidebarContext = createContext<ISidebarContext>({\r\n  setSidebarState: () => {},\r\n});\r\n\r\nconst AppLayout = ({ children, isImageRoom }: AppLayoutProps) => {\r\n  const { data: userInfo } = useSWR('/user/my');\r\n  const { data: modalStateData } = useSWR('modalState');\r\n\r\n  const currentModalState = modalStateData?.currentModalState;\r\n  const [sidebarState, setSidebarState] = useState<boolean>(false);\r\n  const value = useMemo(() => ({ setSidebarState }), [setSidebarState]);\r\n\r\n  const closeSidebar = useCallback(() => {\r\n    setSidebarState(false);\r\n  }, [sidebarState]);\r\n\r\n  if (!userInfo || userInfo.logInState === 'LoggingOut') return <Spinner />;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <OuterContainer showModal={currentModalState}>\r\n        {userInfo?.logInState === 'LoggedIn' && <NavigationBar />}\r\n        <InnerContainer\r\n          style={\r\n            userInfo?.logInState === 'LoggedIn'\r\n              ? { height: 'calc(100% - 66px)' }\r\n              : undefined\r\n          }\r\n        >\r\n          {isImageRoom && <SideBar show={sidebarState} close={closeSidebar} />}\r\n          <SidebarContext.Provider value={value}>\r\n            {children}\r\n          </SidebarContext.Provider>\r\n        </InnerContainer>\r\n      </OuterContainer>\r\n      <Modal modalName={currentModalState} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AppLayout;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateBtn = styled.button`\r\n  position: relative;\r\n\r\n  padding: 0;\r\n  width: 80px;\r\n  height: 50px;\r\n\r\n  border: 4px solid #a6bedb;\r\n  border-radius: 40px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background-color: #86b1e5;\r\n  transition: 0.13s ease-in-out;\r\n\r\n  &:active {\r\n    box-shadow: none;\r\n\r\n    .btn_content {\r\n      box-shadow: none;\r\n\r\n      .btn_icon,\r\n      .btn_text {\r\n        transform: translate3d(0px, 0px, 0px);\r\n      }\r\n    }\r\n  }\r\n  .btn_content {\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 40px;\r\n    box-shadow: inset 0px -8px 0px #7395c0, 0px -8px 0px #9dbfe8;\r\n    transition: 0.13s ease-in-out;\r\n  }\r\n  .btn_icon {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-self: start;\r\n    justify-self: end;\r\n\r\n    height: 32px;\r\n    grid-column: 4;\r\n\r\n    transition: 0.13s ease-in-out;\r\n    transform: translate3d(0px, -4px, 0px);\r\n  }\r\n  .btn_text {\r\n    position: relative;\r\n    text-align: center;\r\n    align-self: end;\r\n\r\n    margin: 0;\r\n    grid-column: 1/5;\r\n    grid-row: 2;\r\n\r\n    color: white;\r\n    font-size: 1.1rem;\r\n    background-color: #888888;\r\n    text-shadow: 2px 2px 3px rgba(255, 255, 255, 0.5);\r\n    -webkit-background-clip: text;\r\n    -moz-background-clip: text;\r\n    background-clip: text;\r\n    transition: 0.13s ease-in-out;\r\n    transform: translate3d(0px, -4px, 0px);\r\n  }\r\n`;\r\n","import React, { CSSProperties, MouseEventHandler } from 'react';\r\nimport { CreateBtn } from './styles';\r\n\r\ninterface Props {\r\n  onClickBtn?: MouseEventHandler<HTMLButtonElement>;\r\n  btnTitle: string;\r\n  customStyle?: CSSProperties;\r\n}\r\n\r\nconst ActionButton = ({ onClickBtn, btnTitle, customStyle }: Props) => {\r\n  return (\r\n    <CreateBtn onClick={onClickBtn} style={customStyle}>\r\n      <div className=\"btn_content\">\r\n        <div className=\"btn_icon\">\r\n          <p className=\"btn_text\">{btnTitle}</p>\r\n        </div>\r\n      </div>\r\n    </CreateBtn>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import styled from '@emotion/styled';\r\n\r\nconst buttonColor = {\r\n  warning: '#212529',\r\n  default: '#ffffff',\r\n};\r\nconst buttonBgColor = {\r\n  success: '#28a745',\r\n  error: '#dc3545',\r\n  warning: '#ffc107',\r\n  default: '#0d6efd',\r\n};\r\nconst buttonHoverBgColor = {\r\n  success: '#218838',\r\n  error: '#c82333',\r\n  warning: '#e0a800',\r\n  default: '#025ce2',\r\n};\r\n\r\nconst Button = styled.button`\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  appearance: none;\r\n\r\n  background: ${buttonBgColor.default};\r\n  color: ${buttonColor.default};\r\n\r\n  margin: 0;\r\n  padding: 0.5rem 1rem;\r\n\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  text-decoration: none;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n\r\n  display: inline-block;\r\n  width: auto;\r\n\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n    0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 0.5s;\r\n\r\n  &.success {\r\n    background: ${buttonBgColor.success};\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      background: ${buttonHoverBgColor.success};\r\n      outline: 0;\r\n    }\r\n    &:disabled {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n\r\n  &.error {\r\n    background: ${buttonBgColor.error};\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      background: ${buttonHoverBgColor.error};\r\n      outline: 0;\r\n    }\r\n    &:disabled {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n\r\n  &.warning {\r\n    color: ${buttonColor.warning};\r\n    background: ${buttonBgColor.warning};\r\n\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      background: ${buttonHoverBgColor.warning};\r\n      outline: 0;\r\n    }\r\n    &:disabled {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { Button };\r\n","import { CImageData } from '@typing/client';\r\nimport { DImageData } from '@typing/db';\r\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\r\nimport { getToken } from './getToken';\r\n\r\ninterface AxiosCustomRequestConfig extends AxiosRequestConfig {\r\n  retryCount: number;\r\n}\r\n\r\nconst postUploadImage = async (\r\n  url: string,\r\n  { arg }: { arg: { uploadImageFile: FormData } },\r\n) => {\r\n  try {\r\n    const { token, message } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error(message);\r\n    }\r\n\r\n    await axios.post('/backapi' + url, arg.uploadImageFile, {\r\n      headers: {\r\n        Authorization: token,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  } catch (err) {\r\n    if (err instanceof AxiosError && err.response?.status === 404) {\r\n      alert('파일이 존재하지 않습니다.');\r\n    } else if (err instanceof Error) {\r\n      alert('이미지를 업로드하지 못하였습니다..');\r\n    }\r\n    return;\r\n  }\r\n};\r\n\r\nconst deleteUserImage = async (\r\n  url: string,\r\n  { arg: imageId }: { arg: number },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    await axios.delete('/backapi' + url, {\r\n      headers: { Authorization: token },\r\n      data: { delete_image_id: imageId },\r\n    });\r\n\r\n    alert('이미지를 삭제하였습니다!');\r\n    return imageId;\r\n  } catch (err) {\r\n    alert('이미지 삭제요청에 실패했습니다..');\r\n    return;\r\n  }\r\n};\r\n\r\n// const getImageData = async (\r\n//   url: string,\r\n//   { arg: newImageList }: { arg: DImageData[] },\r\n// ) => {\r\n//   try {\r\n//     const { token } = await getToken();\r\n\r\n//     if (!token) {\r\n//       throw new Error();\r\n//     }\r\n\r\n//     const imageDataList: CImageData[] = await Promise.all(\r\n//       newImageList.map(async (imageData) => {\r\n//         const res = await axios.get(\r\n//           '/imageapi' + `/image-download/${imageData.link}`,\r\n//           {\r\n//             headers: {\r\n//               Authorization: token,\r\n//             },\r\n//             responseType: 'blob',\r\n//           },\r\n//         );\r\n\r\n//         const url = window.URL.createObjectURL(\r\n//           new Blob([res.data], { type: res.headers['content-type'] }),\r\n//         );\r\n//         const created_at =\r\n//           imageData.created_at?.split(' ')[0] ?? '삭제된 이미지';\r\n//         return { ...imageData, id: imageData.id, created_at, link: url };\r\n//       }),\r\n//     );\r\n\r\n//     return [...imageDataList];\r\n//   } catch (err) {\r\n//     alert('이미지를 받아오지 못하였습니다..');\r\n//     return;\r\n//   }\r\n// };\r\n\r\nconst getImageData = async (\r\n  url: string,\r\n  { arg: imageList }: { arg: DImageData[] },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    if (imageList.length === 0) return [];\r\n    const imgDataList: CImageData[] = [];\r\n\r\n    const MAX_RETRY_COUNT = 2;\r\n    const axiosObj = axios.create();\r\n\r\n    axiosObj.interceptors.response.use(undefined, (error: AxiosError) => {\r\n      const config = error.config as AxiosCustomRequestConfig;\r\n      config.retryCount = config.retryCount ?? 0;\r\n\r\n      const shouldRetry = config.retryCount < MAX_RETRY_COUNT;\r\n      if (shouldRetry) {\r\n        config.retryCount += 1;\r\n        config.headers = { ...config!.headers };\r\n\r\n        return axiosObj.request(config);\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    });\r\n\r\n    const imgDataStateList = await Promise.allSettled(\r\n      imageList.map(async (imageInfo) => {\r\n        const requestConfig: AxiosRequestConfig = {\r\n          url: `/imageapi/image-download/${imageInfo.link}`,\r\n          method: 'GET',\r\n          headers: { Authorization: token },\r\n          responseType: 'blob',\r\n        };\r\n\r\n        const response = await axiosObj.request(requestConfig);\r\n\r\n        const created_at =\r\n          imageInfo.created_at !== null\r\n            ? imageInfo.created_at.split(' ')[0]\r\n            : null;\r\n        const url = window.URL.createObjectURL(\r\n          new Blob([response.data], { type: response.headers['content-type'] }),\r\n        );\r\n        return { ...imageInfo, link: url, created_at };\r\n      }),\r\n    );\r\n\r\n    imgDataStateList.forEach((data) => {\r\n      if (data.status === 'fulfilled') {\r\n        imgDataList.push(data.value);\r\n      }\r\n    });\r\n\r\n    return [...imgDataList];\r\n  } catch (err) {\r\n    alert('이미지를 받아오지 못했습니다..');\r\n    return [];\r\n  }\r\n};\r\n\r\nexport { postUploadImage, deleteUserImage, getImageData };\r\n","import { DImageData } from '@typing/db';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { getToken } from './getToken';\r\n\r\nconst getDefaultImgFetcher = async (\r\n  url: string,\r\n  {\r\n    arg,\r\n  }: {\r\n    arg: {\r\n      start: number;\r\n    };\r\n  },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const { start } = arg;\r\n    const loadNumber = 12;\r\n\r\n    const response = await axios.get(\r\n      '/backapi' + `${url}?start=${start}&limit=${loadNumber}`,\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      },\r\n    );\r\n\r\n    const { imagelist } = response.data;\r\n    const newDataList = imagelist.filter((data: DImageData) => data.link);\r\n\r\n    return { imagelist: [...newDataList], loadDataLength: imagelist.length };\r\n  } catch (err) {\r\n    alert('이미지정보를 받아오지 못했습니다..');\r\n    return {};\r\n  }\r\n};\r\n\r\nconst getFilterImgFetcher = async (\r\n  url: string,\r\n  { arg }: { arg: { start: number; start_date?: string; end_date?: string } },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const { start, start_date, end_date } = arg;\r\n    const limit = 12;\r\n\r\n    const response = await axios.get(\r\n      '/backapi' +\r\n        `${url}?start=${start}&limit=${limit}&start_date=${start_date}&end_date=${end_date}`,\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      },\r\n    );\r\n\r\n    const { imagelist } = response.data;\r\n    const newDataList = imagelist.filter((data: DImageData) => data.link);\r\n\r\n    return { imagelist: [...newDataList], loadDataLength: imagelist.length };\r\n  } catch (err) {\r\n    alert('이미지정보를 받아오지 못했습니다..');\r\n    return {};\r\n  }\r\n};\r\n\r\nconst getUserListFetcher = async (url: string) => {\r\n  const { token } = await getToken();\r\n\r\n  if (!token) {\r\n    throw new Error();\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get('/backapi' + url, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const userlist = response.data.userlist;\r\n    return userlist;\r\n  } catch (err) {\r\n    alert('친구목록을 받아오지 못했습니다..');\r\n    return;\r\n  }\r\n};\r\n\r\nconst inviteFriendFetcher = async (\r\n  url: string,\r\n  { arg: invite_userlist }: { arg: number[] },\r\n) => {\r\n  try {\r\n    if (invite_userlist.length === 0) return;\r\n\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    await axios.post(\r\n      '/backapi' + url,\r\n      {\r\n        invite_userlist,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      },\r\n    );\r\n  } catch (err) {\r\n    alert('친구를 초대하지 못했습니다..');\r\n    return;\r\n  }\r\n};\r\n\r\nconst getUnreadImageList = async (url: string) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n    const response = await axios.get('/backapi' + url, {\r\n      headers: { Authorization: token },\r\n    });\r\n    return [...response.data.imagelist];\r\n  } catch (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n};\r\n\r\nconst deleteRoomImgFetcher = async (\r\n  url: string,\r\n  { arg: imageId }: { arg: number },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    await axios.delete('/backapi' + url, {\r\n      headers: { Authorization: token },\r\n      data: {\r\n        delete_room_image_id: imageId,\r\n      },\r\n    });\r\n    alert('이미지를 삭제하였습니다.');\r\n    return imageId;\r\n  } catch (err) {\r\n    if (err instanceof AxiosError) {\r\n      if (err.response?.status === 404) {\r\n        alert(err.response.data.message);\r\n      }\r\n    } else {\r\n      alert('이미지를 삭제하지 못하였습니다..');\r\n    }\r\n    return;\r\n  }\r\n};\r\n\r\nconst createRoomFetcher = async (\r\n  url: string,\r\n  { arg }: { arg: { selectMemberIdList: number[]; roomName: string } },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const { selectMemberIdList, roomName } = arg;\r\n    await axios.post(\r\n      '/backapi' + url,\r\n      {\r\n        userlist: selectMemberIdList,\r\n        title: roomName,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    );\r\n    alert('방을 생성하였습니다.');\r\n  } catch (err) {\r\n    alert('방을 생성하지 못했습니다..');\r\n    return;\r\n  }\r\n};\r\n\r\nconst deleteMemberFetcher = async (\r\n  url: string,\r\n  { arg: memberId }: { arg: number },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    await axios.delete('/backapi' + url, {\r\n      headers: { Authorization: token },\r\n      data: {\r\n        delete_room_user_id: memberId,\r\n      },\r\n    });\r\n\r\n    alert('강퇴하였습니다.');\r\n\r\n    return true;\r\n  } catch (err) {\r\n    if (err instanceof AxiosError) {\r\n      if (err.response?.status === 403) {\r\n        alert('방장이 아닙니다.');\r\n      }\r\n    } else {\r\n      alert('요청을 실패하였습니다..');\r\n    }\r\n    return false;\r\n  }\r\n};\r\n\r\nexport {\r\n  getDefaultImgFetcher,\r\n  getFilterImgFetcher,\r\n  getUserListFetcher,\r\n  inviteFriendFetcher,\r\n  getUnreadImageList,\r\n  deleteRoomImgFetcher,\r\n  createRoomFetcher,\r\n  deleteMemberFetcher,\r\n};\r\n","import axios, { AxiosError } from 'axios';\r\nimport { DImageData } from '@typing/db';\r\nimport { getToken } from './getToken';\r\n\r\nconst getUserFriendList = async (url: string) => {\r\n  try {\r\n    const userId = sessionStorage.getItem('user_id');\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const response = await axios.get('/backapi' + `/user/${userId}/${url}`, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const { friendlist } = await response.data;\r\n    return friendlist;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getUserImageList = async (\r\n  url: string,\r\n  { arg: start }: { arg: number },\r\n) => {\r\n  const userId = sessionStorage.getItem('user_id');\r\n  const { token } = await getToken();\r\n\r\n  if (!token) {\r\n    throw new Error();\r\n  }\r\n\r\n  const limit = 12;\r\n  try {\r\n    const response = await axios.get(\r\n      '/backapi' + `/user/${userId}/imagelist?start=${start}&limit=${limit}`,\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      },\r\n    );\r\n\r\n    const { imagelist } = await response.data;\r\n    const filteredImageList = imagelist.filter((data: DImageData) => data.link);\r\n    return { imagelist: filteredImageList, loadDataLength: imagelist.length };\r\n  } catch (err) {\r\n    alert('이미지정보를 받아오지 못했습니다..');\r\n    return;\r\n  }\r\n};\r\n\r\nconst getUserImageLen = async (url: string) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const response = await axios.get('/backapi' + url, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n\r\n    const { imagelist_len } = response.data;\r\n\r\n    return { imagelist_len };\r\n  } catch (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n};\r\n\r\nconst deleteUserFriend = async (url: string, { arg }: { arg: number }) => {\r\n  try {\r\n    const userId = sessionStorage.getItem('user_id');\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    await axios.delete('/backapi' + `/user/${userId}/friend`, {\r\n      data: {\r\n        delete_friend_user_id: arg,\r\n      },\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n    alert('친구 목록에서 삭제하였습니다.');\r\n  } catch (err) {\r\n    if (err instanceof AxiosError && err.response?.status === 404) {\r\n      alert(err.response.data.message);\r\n    } else {\r\n      alert('요청을 실패하였습니다..');\r\n    }\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getUserRoomListFetcher = async (url: string) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const response = await axios.get('/backapi' + url, {\r\n      headers: {\r\n        Authorization: `${token}`,\r\n      },\r\n    });\r\n\r\n    const { roomlist } = response.data;\r\n\r\n    return roomlist;\r\n  } catch (err) {\r\n    console.error('에러', err);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst postUserInfoFetcher = async (\r\n  url: string,\r\n  { arg }: { arg: { name?: string; profile?: string } },\r\n) => {\r\n  try {\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const postData: { name?: string; profile?: string } = {};\r\n\r\n    if (arg.name) postData.name = arg.name;\r\n    if (arg.profile) postData.profile = arg.profile;\r\n\r\n    await axios.post('/backapi' + url, postData, {\r\n      headers: { Authorization: token },\r\n    });\r\n    alert('변경되었습니다.');\r\n  } catch (err) {\r\n    alert('요청을 실패하였습니다..');\r\n    return;\r\n  }\r\n};\r\n\r\nconst postNewFriend = async (\r\n  url: string,\r\n  { arg: friendId }: { arg: number },\r\n) => {\r\n  try {\r\n    const userId = sessionStorage.getItem('user_id');\r\n    const { token } = await getToken();\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    const response = await axios.post(\r\n      '/backapi' + `/user/${userId}/friend`,\r\n      {\r\n        friend_user_id: friendId,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      },\r\n    );\r\n    if (response.data === '0명 친구 생성 성공') {\r\n      alert('자신을 친구로 추가할 수 없습니다.');\r\n    } else {\r\n      alert('성공적으로 추가하였습니다');\r\n    }\r\n  } catch (err) {\r\n    if (\r\n      err instanceof AxiosError &&\r\n      (err.response?.status === 402 || err.response?.status === 404)\r\n    ) {\r\n      alert(err.response?.data.message);\r\n    } else {\r\n      alert('요청을 실패했습니다..');\r\n    }\r\n    return;\r\n  }\r\n};\r\n\r\nconst leaveRoomFetcher = async (\r\n  url: string,\r\n  { arg: roomId }: { arg: string },\r\n) => {\r\n  try {\r\n    if (!roomId) throw new Error('올바른 요청이 아닙니다.');\r\n    const { token } = await getToken();\r\n    const userId = sessionStorage.getItem('user_id');\r\n\r\n    if (!token) {\r\n      throw new Error();\r\n    }\r\n\r\n    await axios.delete('/backapi' + `/user/${userId}/room`, {\r\n      headers: { Authorization: token },\r\n      data: { delete_user_room_id: roomId },\r\n    });\r\n\r\n    alert('성공적으로 나갔습니다.');\r\n  } catch (err) {\r\n    alert('요청을 실패했습니다..');\r\n    return;\r\n  }\r\n};\r\n\r\nexport {\r\n  getUserFriendList,\r\n  getUserRoomListFetcher,\r\n  getUserImageList,\r\n  getUserImageLen,\r\n  postNewFriend,\r\n  postUserInfoFetcher,\r\n  deleteUserFriend,\r\n  leaveRoomFetcher,\r\n};\r\n"],"names":["initialValue","useState","value","setValue","onChangeForm","useCallback","e","target","Wrapper","styled","BottomContainer","MobileNavList","MobileNavItem","UserBox","UserInfo","LogoutBtn","i","navigate","useNavigate","useSWR","userInfo","data","upadateUserState","mutate","clickUserIcon","setClickUserIcon","hoverUserIcon","setHoverUserIcon","userInfoEl","useRef","useEffect","window","addEventListener","userIconBoxHandler","removeEventListener","MobileNav","children","useMediaQuery","maxWidth","DeskTopNav","minWidth","HTMLElement","current","contains","onMouseEnterUserIcon","onMouseLeaveUserIcon","onClickLogOut","sessionStorage","clear","logInState","then","to","className","onMouseEnter","onMouseLeave","onClick","prev","size","style","display","ref","name","email","Button","type","sliceAnimate","keyframes","check01Animate","check02Animate","fireworkAnimate","Container","DataCheckInput","props","boxName","css","DataLabel","CollapseListBox","boxInfo","currentLoginId","readOnly","dataClickCallBack","onClickDeleteMember","preventClickCSS","pointerEvents","labelMarginCSS","marginLeft","map","item","key","id","defaultChecked","htmlFor","hostId","undefined","memo","Subtitle","Collapse","collapse","CreateBtnBox","roomlist","closeSidebar","roomId","useParams","channelCollapse","setChannelCollapse","onClickRoom","toggleChannelCollapse","onClickBtn","currentModalState","btnTitle","Spinner","currentRoomInfo","useSWRConfig","deleteMemberTrigger","useSWRMutation","deleteMemberFetcher","trigger","memberCollapse","setMemberCollapse","toggleMemberCollapse","collapseListBoxData","userlist","userData","host_user_id","memberId","userId","getItem","Background","show","ContentWrapper","ContentTabs","Tab","close","roomListInfo","getUserRoomListFetcher","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","sideBarEl","backgroundEl","handleCloseSidebar","extractRoomList","useMemo","title","extractCurrentUserList","find","modalStateData","alertBoxEl","propsData","deleteRoomImgTrigger","deleteRoomImgFetcher","deleteUserImgTrigger","deleteUserImage","leaveRoomTrigger","leaveRoomFetcher","handleCloseAlert","content","mutateKey","imageId","dataId","ModalBoxContainer","ModalBox","Title","ContentBox","Content","RoomName","MemeberList","ActionBtn","ResultRoomName","ResultMembers","ResultActionBtn","friendList","getUserFriendList","createRoomTrigger","createRoomFetcher","currentStage","setCurrentStage","friendCheckList","setFriendCheckList","selectListState","setSelectListState","useInput","roomName","handleRoomName","newList","check","selectMember","filter","onClickPrevStage","stopPropagation","onClickNext","alert","onClickCreateRequest","selectMemberIdList","catch","err","AxiosError","onChange","length","friendData","friendId","prevData","modalSize","modalWidth","modalHeight","ImageSection","imageInfo","getCurrentModalSize","innerHeight","toFixed","Number","parseFloat","setModalSize","timeout","handleResizeModal","clearTimeout","setTimeout","imageSizeCSS","imageLink","imageObj","Image","src","innerWidth","width","height","user_name","created_at","link","alt","index","userFriendList","roomMemberList","getUserListFetcher","inviteFriendsTrigger","inviteFriendFetcher","checkFriendState","setCheckFriendState","appendCheckList","onClickInviteFriends","selectDataId","checkFriendList","newData","ModalContainer","Modal","ModalHeaderWrapper","HeaderContainer","ModalHeader","ModalTitle","ModalImageBox","ImageDiv","image","ImageCover","uploadImageTrigger","postUploadImage","tmpImageData","setTmpImageData","imageData","setImageData","uploadImageFile","setUploadImageFile","debounce","onDrop","preventDefault","formData","FormData","dataTransfer","items","kind","file","getAsFile","append","files","URL","createObjectURL","get","onDragOver","CloseBtn","modalEl","onClickOuterModal","backgroundColor","modalName","currentModalComponent","OuterContainer","showModal","InnerContainer","SidebarContext","createContext","setSidebarState","isImageRoom","sidebarState","Provider","CreateBtn","customStyle","url","arg","getToken","token","message","Error","axios","headers","Authorization","response","status","delete_image_id","getImageData","imageList","imgDataList","axiosObj","interceptors","use","error","config","retryCount","request","Promise","reject","allSettled","requestConfig","method","responseType","split","Blob","forEach","push","getDefaultImgFetcher","start","imagelist","newDataList","loadDataLength","getFilterImgFetcher","start_date","end_date","invite_userlist","getUnreadImageList","console","delete_room_image_id","delete_room_user_id","friendlist","getUserImageList","filteredImageList","getUserImageLen","imagelist_len","deleteUserFriend","delete_friend_user_id","postUserInfoFetcher","postData","profile","postNewFriend","friend_user_id","delete_user_room_id"],"sourceRoot":""}