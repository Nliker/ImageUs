{"version":3,"file":"919.js","mappings":"iNAEaA,EAAgB,WAAH,OACxB,uBAAKC,IAAI,iCAAiCC,IAAI,UAAW,E,4HCDpD,IAAMC,EAAWC,EAAAA,EAAAA,IAAU,sGAQrBC,EAAkBD,EAAAA,EAAAA,IAAU,0IAc5BE,EAAmBF,EAAAA,EAAAA,QAAc,wqBA+CjCG,EAAeH,EAAAA,EAAAA,QAAc,giE,iBCmE1C,QArHiB,WACf,IAAMI,EAASC,eAAeC,QAAQ,WAC9BC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAIIE,EAAAA,EAAAA,IAAO,YAHHC,EAAQ,EAAdC,KACQC,EAAe,EAAvBL,OACAM,EAAY,EAAZA,aAGIC,EAAgC,CACpCC,MAAO,UAGTC,EAAAA,EAAAA,YAAU,WACqB,gBAAzBN,aAAQ,EAARA,EAAUO,aACZL,EAAgB,CAAEK,WAAY,aAGlC,GAAG,CAACP,IAEJ,IAAMQ,EAAqB,WACzB,OACE,gBAAC,KAAU,KACT,gBAAChB,EAAgB,KACf,uBAAKiB,UAAU,mBACb,2BAASA,UAAU,qBACjB,sBAAIA,UAAU,mBAAiB,aACnB,2BACV,wBAAMA,UAAU,cAAY,WAAe,IAC3C,2BAAM,iBAGV,uBAAKA,UAAU,aACb,gBAAC,KAAO,CAACC,GAAI,UACX,gBAACC,EAAA,EAAM,gBAET,gBAAC,KAAO,CAACD,GAAI,WACX,gBAACC,EAAA,EAAM,kBAGX,gBAACzB,EAAa,QAKxB,EAEM0B,EAAkB,WACtB,OAAmDb,EAAAA,EAAAA,IAAO,SAAD,OAC9CL,EAAM,cADHmB,EAAQ,EAAdZ,KAAwBa,EAAc,EAAtBjB,OASxB,OALAS,EAAAA,EAAAA,YAAU,WACHN,GAAoC,cAAxBA,EAASO,YAC1BO,GAAeC,EAAAA,EAAAA,IAAuB,SAAD,OAAUrB,EAAM,cACvD,GAAG,IAGD,gBAACD,EAAY,KACX,8BACE,sCAEF,uBAAKgB,UAAU,eACb,uBAAKA,UAAU,gBACb,gBAAC,KAAU,KACT,sBAAIA,UAAU,aACVI,EAEsB,IAApBA,EAASG,OACX,2CAEAH,EAASI,KAAI,SAACC,GAAmB,OAC/B,gBAAC,KAAI,CAACC,IAAKD,EAASE,GAAIV,GAAE,gBAAWQ,EAASE,KAC5C,0BAAKF,EAASG,OACT,IAPT,wCAaR,uBAAKZ,UAAU,mBACb,gBAAC,IAAY,CACXa,WAAY,WACVzB,EAAO,aAAc,CACnB0B,kBAAmB,aAEvB,EACAC,SAAU,SACVC,YAAarB,MAMzB,EAEA,OAAKJ,GAAoC,eAAxBA,EAASO,YAA+BJ,EAChD,gBAACuB,EAAA,EAAO,MAIf,gBAACC,EAAA,EAAS,KACR,gBAACtC,EAAQ,KACP,gBAACE,EAAe,KACd,4BAC4B,eAAzBS,aAAQ,EAARA,EAAUO,YACT,gBAACC,EAAkB,MAEnB,gBAACI,EAAe,SAO9B,C","sources":["webpack://imageus/./assets/image/index.tsx","webpack://imageus/./pages/MainPage/styles.tsx","webpack://imageus/./pages/MainPage/index.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport const BackgroundImg = () => (\r\n  <img src=\"images/main_background_img.png\" alt=\"배경 이미지\" />\r\n);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrappper = styled.div`\r\n  min-width: 370px;\r\n  height: 100%;\r\n  font-size: 0.85rem;\r\n\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ContentWrappper = styled.div`\r\n  height: 100%;\r\n\r\n  main {\r\n    display: flex;\r\n\r\n    height: 100%;\r\n\r\n    section {\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainIntroduction = styled.section`\r\n  .main_background {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    gap: 5rem;\r\n\r\n    color: white;\r\n    background-color: #080609;\r\n\r\n    img {\r\n      position: absolute;\r\n      right: 0;\r\n\r\n      height: 70%;\r\n    }\r\n\r\n    .btn_group {\r\n      display: flex;\r\n      position: relative;\r\n      z-index: 1;\r\n\r\n      gap: 5rem;\r\n    }\r\n  }\r\n\r\n  .main_page_article {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n\r\n  .main_page_intro {\r\n    text-align: center;\r\n\r\n    margin: 0;\r\n    font-size: 2.75rem;\r\n\r\n    .brand_logo {\r\n      color: #ecb22e;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainRoomList = styled.article`\r\n  width: 100%;\r\n  height: calc(100% - 30px);\r\n  max-width: 600px;\r\n\r\n  margin: auto;\r\n  text-align: center;\r\n\r\n  border-radius: 12px;\r\n  box-shadow: 2px 2px 4px 2px rgb(0 0 0 / 30%);\r\n\r\n  .content_box {\r\n    position: relative;\r\n    display: inline-block;\r\n\r\n    width: 100%;\r\n    height: calc(100% - 130px);\r\n\r\n    overflow: hidden;\r\n    border-radius: 12px;\r\n\r\n    .content_list {\r\n      height: calc(100% - 80px);\r\n    }\r\n  }\r\n\r\n  header {\r\n    position: relative;\r\n\r\n    height: 130px;\r\n\r\n    background-image: repeating-radial-gradient(\r\n        circle at 15%,\r\n        transparent 0%,\r\n        transparent 10%,\r\n        rgba(54, 89, 219, 0.33) 10%,\r\n        rgba(54, 89, 219, 0.33) 17%\r\n      ),\r\n      linear-gradient(to right, #5b7cfa, #3659db);\r\n    border-radius: 12px 12px 0 0;\r\n\r\n    overflow: hidden;\r\n    color: #fff;\r\n\r\n    & > h1 {\r\n      position: relative;\r\n      top: 50%;\r\n\r\n      margin: 0;\r\n\r\n      transform: translateY(-50%);\r\n    }\r\n  }\r\n\r\n  .room_list {\r\n    display: grid;\r\n    grid-template-rows: repeat(auto-fill, 50px);\r\n    row-gap: 30px;\r\n\r\n    border-radius: 0 0 12px 12px;\r\n    padding: 15px 60px 20px;\r\n\r\n    list-style: none;\r\n    background-color: #fff;\r\n\r\n    & > a {\r\n      height: 100%;\r\n\r\n      color: black;\r\n      text-decoration: none;\r\n\r\n      & > li {\r\n        display: grid;\r\n        align-items: center;\r\n\r\n        height: 100%;\r\n        padding: 10px 30px 10px 10px;\r\n        box-sizing: border-box;\r\n\r\n        border-radius: 10px;\r\n        background-color: #fff;\r\n        overflow: hidden;\r\n        cursor: pointer;\r\n        box-shadow: 0 5px 7px -1px rgb(51 51 51 / 23%);\r\n        transition: transform 0.25s cubic-bezier(0.7, 0.98, 0.86, 0.98),\r\n          box-shadow 0.25s cubic-bezier(0.7, 0.98, 0.86, 0.98);\r\n\r\n        &:hover {\r\n          transform: scale(1.2);\r\n          box-shadow: 0 9px 47px 11px rgba(51, 51, 51, 0.18);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .create_room_btn {\r\n    position: absolute;\r\n    bottom: 0;\r\n\r\n    width: 100%;\r\n    padding: 15px 0;\r\n    border-top: 1px solid #e2eded;\r\n  }\r\n`;\r\n","import React, { CSSProperties, useEffect } from 'react';\r\nimport useSWR, { useSWRConfig } from 'swr';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { DRoomData } from '@typing/db';\r\nimport AppLayout from '@layouts/AppLayout';\r\nimport { Button } from '@styles/Button';\r\nimport { getUserRoomListFetcher } from '@utils/userDataFetcher';\r\nimport { BackgroundImg } from '@assets/image';\r\nimport {\r\n  ContentWrappper,\r\n  MainIntroduction,\r\n  MainRoomList,\r\n  Wrappper,\r\n} from './styles';\r\nimport ActionButton from '@styles/ActiveButton';\r\nimport Spinner from '@styles/Spinner';\r\n\r\nconst MainPage = () => {\r\n  const userId = sessionStorage.getItem('user_id');\r\n  const { mutate } = useSWRConfig();\r\n  const {\r\n    data: userInfo,\r\n    mutate: mutateUserState,\r\n    isValidating,\r\n  } = useSWR('/user/my');\r\n\r\n  const createBtnStyle: CSSProperties = {\r\n    width: '150px',\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo?.logInState === 'LoggingOut') {\r\n      mutateUserState({ logInState: 'LoggedOut' });\r\n    }\r\n    return;\r\n  }, [userInfo]);\r\n\r\n  const IsNotLoginMainPage = () => {\r\n    return (\r\n      <Scrollbars>\r\n        <MainIntroduction>\r\n          <div className=\"main_background\">\r\n            <article className=\"main_page_article\">\r\n              <h1 className=\"main_page_intro\">\r\n                지인들과의 사진을 <br />\r\n                <span className=\"brand_logo\">ImageUS</span>와\r\n                <br /> 공유하고 간직하세요!\r\n              </h1>\r\n            </article>\r\n            <div className=\"btn_group\">\r\n              <NavLink to={'/login'}>\r\n                <Button>로그인 하기</Button>\r\n              </NavLink>\r\n              <NavLink to={'/signup'}>\r\n                <Button>회원가입 하기</Button>\r\n              </NavLink>\r\n            </div>\r\n            <BackgroundImg />\r\n          </div>\r\n        </MainIntroduction>\r\n      </Scrollbars>\r\n    );\r\n  };\r\n\r\n  const IsLoginMainPage = () => {\r\n    const { data: roomlist, mutate: mutateRoomlist } = useSWR(\r\n      `/user/${userId}/roomlist`,\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (!userInfo || userInfo.logInState === 'LoggedOut') return;\r\n      mutateRoomlist(getUserRoomListFetcher(`/user/${userId}/roomlist`));\r\n    }, []);\r\n\r\n    return (\r\n      <MainRoomList>\r\n        <header>\r\n          <h1>방에 입장하기</h1>\r\n        </header>\r\n        <div className=\"content_box\">\r\n          <div className=\"content_list\">\r\n            <Scrollbars>\r\n              <ul className=\"room_list\">\r\n                {!roomlist ? (\r\n                  <div>로딩중...</div>\r\n                ) : roomlist.length === 0 ? (\r\n                  <div>등록된 방이 없습니다.</div>\r\n                ) : (\r\n                  roomlist.map((roomData: DRoomData) => (\r\n                    <Link key={roomData.id} to={`/room/${roomData.id}`}>\r\n                      <li>{roomData.title}</li>\r\n                    </Link>\r\n                  ))\r\n                )}\r\n              </ul>\r\n            </Scrollbars>\r\n          </div>\r\n          <div className=\"create_room_btn\">\r\n            <ActionButton\r\n              onClickBtn={() => {\r\n                mutate('modalState', {\r\n                  currentModalState: 'creatRoom',\r\n                });\r\n              }}\r\n              btnTitle={'방 생성하기'}\r\n              customStyle={createBtnStyle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </MainRoomList>\r\n    );\r\n  };\r\n\r\n  if (!userInfo || userInfo.logInState === 'LoggingOut' || isValidating) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Wrappper>\r\n        <ContentWrappper>\r\n          <main>\r\n            {userInfo?.logInState === 'LoggedOut' ? (\r\n              <IsNotLoginMainPage />\r\n            ) : (\r\n              <IsLoginMainPage />\r\n            )}\r\n          </main>\r\n        </ContentWrappper>\r\n      </Wrappper>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["BackgroundImg","src","alt","Wrappper","styled","ContentWrappper","MainIntroduction","MainRoomList","userId","sessionStorage","getItem","mutate","useSWRConfig","useSWR","userInfo","data","mutateUserState","isValidating","createBtnStyle","width","useEffect","logInState","IsNotLoginMainPage","className","to","Button","IsLoginMainPage","roomlist","mutateRoomlist","getUserRoomListFetcher","length","map","roomData","key","id","title","onClickBtn","currentModalState","btnTitle","customStyle","Spinner","AppLayout"],"sourceRoot":""}