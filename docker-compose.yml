version: "3.7"
services:
  db:
    build: ./mysql
    container_name: imageus_back_mysql
    restart: always
    ports:
      - '3333:3306'
    platform: linux/amd64
  
  imageus_back:
    build:  ./back
    container_name:  imageus_back
    depends_on:
      - db
    restart:  always
    expose:
      - "4000"

  imageus_image:
    build:  ./image_back
    container_name:  imageus_image
    depends_on:
      - db
    restart:  always
    expose:
      - "4001"
  
  nginx:
    build:  ./nginx
    container_name: nginx_imageus
    restart:  always
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    depends_on:
      - imageus_back
      - imageus_image
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    platform: linux/amd64

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - cluster.name=es-docker
      - node.name=node1
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - 9200:9200
    restart: always
    platform: linux/amd64
    healthcheck:
      test: curl -u elastic:elastic -s -f elasticsearch:9200/_cat/health >/dev/null || exit 1
      interval: 20s
      timeout: 5s
      retries: 100

  elasticsearch_config:
    build:  ./elasticsearch_config
    container_name: elastic_init_index
    restart: "no"
    depends_on:
      elasticsearch: 
        condition: service_healthy
    entrypoint: [ "bash","init_index.sh"]    
